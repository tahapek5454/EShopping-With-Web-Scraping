from gridfs import Database
import requests
from bs4 import BeautifulSoup
from pymongo import MongoClient

class UcuzlukPazari_Database:
    
    client=MongoClient('mongodb://{0}:{0}@localhost:27017'.format('abvag','abvag'))
    db=client["WebScraping"]
    mycol=db["shopping_products"]
    
    def __init__(self) -> None:     
        pass
    
    def add_dict_product(self,prod_dict):
        self.mycol.insert_many(prod_dict)
        
    def add_one_product(self,dict):
        self.mycol.insert_one(dict)
        
    def control_add_product(self,prod_dict):
        
        prod= self.mycol.find()
        if(prod==None):
            
            self.add_dict_product(prod_dict)
            
        else:
            for p in prod_dict:
                    
                    for a in prod:
                        
                        if(a['prodTitle']==p['prodTitle']):
                            
                            self.delete_product(a)
                            break
               
                    self.add_one_product(p)
                  
    def delete_product(self,dict):
        
        self.mycol.delete_one(dict)
            
    def delete_col(self):
        
        self.mycol.delete_many({})

class WebScrapping:

    headers = {
        'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36'
    }

    # where append all all product
    pcN11List=[]
    pcTeknosaList=[]
    pcHepsiBuradaList=[]
    pcTrendyolList=[]
    pcCicekSepetiList=[]
    pcLaptopStore41=[]
    product_id=40000


    def __init__(self) -> None:
        # with open('id.txt','r') as f:
        #     self.product_id = f.read()
        #     self.product_id = int(self.product_id)
        pass


    def n11(self):
        
        # n11'de image urlleri çekildi. title çekildi. link çekildi.
        
        
        productLinks = [] # all product link that visited
        productPrice = [] # all product price that visited
        productImageLinks=[] # all product imagelinks that visited
        productTitle=[] # all product prodtitles that visited
        index = 0

        for urlIndex in range(1,40):
            # 
            # https://www.n11.com/bilgisayar/dizustu-bilgisayar
            urlForN11 = f'https://www.n11.com/bilgisayar/dizustu-bilgisayar?pg={urlIndex}'
            response = requests.get(urlForN11)
            html = response.content #response ı html icerigine ceviriyoruz
            soup = BeautifulSoup(html, 'html.parser') #icerigi parse ediyoruz

            

            liste = soup.find('ul', {'class':'list-ul'}).find_all('li', {'class':'column'}) #tüm listeyi al
            # n11 page 1 de 24 urun var
            

            for item in liste:
                link = item.find('a', {'class':'plink'}).get('href')
                productLinks.append(link)

                price = item.find('div', {'class':'proDetail'}).find('div', {'class':'priceContainer'})\
                .find('span', {'class':'newPrice cPoint priceEventClick'}).ins.text
                productPrice.append(price)
                
                image = item.find('img',{'class':'lazy cardImage'}).get('data-images')
                productImageLinks.append(image)
                
                title=item.find('h3',{'class':'productName'})
                productTitle.append(title.text)
        
        
        for link in productLinks:
            response2 = requests.get(link, headers=self.headers)
            html2 = response2.content
            soup2 = BeautifulSoup(html2, 'html.parser')

            features = soup2.find_all('li', {'class':'unf-prop-list-item'})
            # feaures has 23 attribute
            raiting = soup2.find('div', {'class':'ratingCont'}).strong

            if(raiting==None):
                raiting=0
            else:
                raiting=raiting.text.strip()
                 
            for feaure in features:

                if feaure.p.text == 'Marka':
                    marka = feaure.find_all('p')[1].text.strip()
                
                elif feaure.p.text == 'Model':
                    modelAdi = feaure.find_all('p')[1].text.strip()
                
                elif feaure.p.text == 'İşletim Sistemi':
                    isletimSistemi = feaure.find_all('p')[1].text.strip()

                elif feaure.p.text == 'İşlemci':
                    islemciTipi = feaure.find_all('p')[1].text.strip()
                
                elif feaure.p.text == 'İşlemci Modeli':
                    islemciNesli = feaure.find_all('p')[1].text.strip()
                
                elif feaure.p.text == 'Bellek Kapasitesi':
                    ram = feaure.find_all('p')[1].text.strip()
                
                elif feaure.p.text == 'Disk Kapasitesi':
                    diskBoyutu = feaure.find_all('p')[1].text.strip()
                
                elif feaure.p.text == 'Disk Türü':
                    diskTuru = feaure.find_all('p')[1].text.strip()
                
                elif feaure.p.text == 'Ekran Boyutu':
                    ekranBoyutu = feaure.find_all('p')[1].text.strip()
                  
            puani = raiting     
            fiyat = productPrice[index]
            
            fiyat=self.shapeFiyat(fiyat)
            
            imageLink=productImageLinks[index]
            prodTitle=productTitle[index]
            modelName = prodTitle.split(' ')[1]
            index = index + 1



            tempModelNo = modelAdi.split(' ')
            if len(tempModelNo) == 1:
                # model no direkt kendisidir
                modelNo = tempModelNo[0]
                
            elif len(tempModelNo) >=1 :
                # tempModelNo bosluklarla ayrilmis
                modelNo = tempModelNo[-1]
               
            else:
                # bos stringtir 
                modelNo = "Yok"
                





            # model_no_list=modelAdi.split(' ')
            # if(len(model_no_list)==1):
            #     delAdi=model_list_split[0]
            #         modeif(model_no_list[0].find('-')!=-1):
            #         model_list_split=model_no_list[0].split('-')
            #         mol_no=model_list_split[1]
            #     else:
            #         modelAdi='Belirtilmemiş'
            #         model_no=model_no_list[0]
            # else:
            #     model_no=model_no_list[len(model_no_list)-1]
            #     model_name=""
            #     for x in range(0,len(model_no_list)-1):
            #         model_name+=model_no_list[x]
            #         model_name+=" "




            site = 'n11'
            islemciNesli=self.n11NesilShaper(islemciNesli)
            ekranBoyutu=self.shapeEkranBoyutu(ekranBoyutu)
            isletimSistemi=self.shapeIsletimSistemi(isletimSistemi)
            productDict = {
                'marka':marka,
                'modelAdi':modelName,
                'modelNo':modelNo,
                'isletimSistemi':isletimSistemi,
                'islemciTipi':islemciTipi,
                'islemciNesli':islemciNesli,
                'ram':ram,
                'diskBoyutu':diskBoyutu,
                'diskTuru':diskTuru,
                'ekranBoyu':ekranBoyutu,
                'puani':puani,
                'fiyat':fiyat,
                'site':site,
                'prodLink':link,
                'prodImageLink':imageLink,
                'prodTitle':prodTitle,
                'id':self.product_id
            }
            self.product_id=self.product_id+1
            print(index)
            print('*'*100)
            if productDict['prodLink'] == "https://www.n11.com/urun/lenovo-ideapad-3-15itl6-82h802f6tx-i5-1135g7-8-gb-1-tb-ssd-156-free-dos-dizustu-bilgisayar-17853320?magaza=yorungeonline":
                print(productDict)
                print('*'*100)
            self.pcN11List.append(productDict)

    def hepsiBurada(self):
        productLinks = []
        productTitles=[]
        productPrices=[]
        productMarkas=[]
        productImageLinks=[]
        productStarts=[]
        index=0
        # sayfaki genel tum urunlerin linkini alma kısmı
        for urlIndex in range(1,40):
            urlForHepsiBurada = f'https://www.hepsiburada.com/laptop-notebook-dizustu-bilgisayarlar-c-98?sayfa={urlIndex}'
            # first page
            response = requests.get(urlForHepsiBurada, headers=self.headers)
            html = response.content
            soup = BeautifulSoup(html, 'html.parser')

            products = soup.find('ul', {'class':'productListContent-frGrtf5XrVXRwJ05HUfU productListContent-rEYj2_8SETJUeqNhyzSm'})\
                        .find_all('li', {'class':'productListContent-zAP0Y5msy8OHn5z7T_K_'})
            
            for item in products:
                #print(item)
                link = item.a.get('href')
                productLinks.append('https://www.hepsiburada.com'+link)
                
                title=item.h3.text
                productTitles.append(title)
                
                price=item.find('div',{'data-test-id':'price-current-price'}).text
                productPrices.append(price.split(' ')[0])
                
                marka=title.split(' ')[0]
                productMarkas.append(marka)
                
                image=item.find('div',{'data-test-id':'product-card-image-container'}).find('img').get('src')
                productImageLinks.append(image)
                
                try:
                    rating=item.find('ul',{'data-baseweb':'star-rating'}).find_all('li')
                    toplam_puan=0
                    for rate in rating:
                        try:
                            toplam_puan+=float(rate.find('div').get('width')[0:len(rate.find('div').get('width'))-1])
                        except:
                            toplam_puan="0"
                            break
                    productStarts.append(toplam_puan/100)
                except:
                    productStarts.append('0')
                    
                productDict = {
                        'marka':productMarkas[index],
                        'modelAdi':"",
                        'modelNo':"",
                        'isletimSistemi':"",
                        'islemciTipi':"",
                        'islemciNesli':"",
                        'ram':"",
                        'diskBoyutu':"",
                        'diskTuru':"",
                        'ekranBoyu':"",
                        'puani':productStarts[index],
                        'fiyat':self.shapeFiyat(productPrices[index]),
                        'imageLink':productImageLinks[index],
                        'prodLink':productLinks[index],
                        'prodTitle':productTitles[index],
                        'site':"Hepsiburada",
                        'id':self.product_id
                    }
                self.product_id = self.product_id +1
                index=index+1
                self.pcHepsiBuradaList.append(productDict)
                
    def trendyol(self):
        
        product_urls=[]
        product_names=[]
        product_prices=[]
        product_modal_names=[]
        product_ratings=[]
        product_image_urls=[]
        product_titles=[]
        index2=0
        for page in range(1,30):
            base_url="https://www.trendyol.com/laptop-x-c103108?pi={0}".format(page)
            response=requests.get(base_url)
            soup=BeautifulSoup(response.content,'html.parser')
            products=soup.find('div',{'class':'prdct-cntnr-wrppr'}).find_all('div',{'class':'p-card-wrppr'})
            for product in products:
                url=product.find('a').get('href')
                product_url="https://www.trendyol.com"+url
                product_urls.append(product_url)
                product_name=product.find('span',{'class':'prdct-desc-cntnr-ttl'}).text
                product_names.append(product_name)
                product_price=product.find('div',{'class':'prc-box-dscntd'}).text.split(' ')[0]
                product_prices.append(product_price)
                product_modal_name=product.find('div',{'class':'prdct-desc-cntnr-ttl-w two-line-text'}).find('span',{'class':'prdct-desc-cntnr-name'}).text.split(' ')[0]
                product_modal_names.append(product_modal_name)
                product_title=product.find('span',{'class':'prdct-desc-cntnr-name'})
                product_titles.append(product_name+" "+product_title.text)
              
                try:
                    puan = product.find('div',{'class':'product-down'}).find('div',{'class':'ratings-container'}).find('div',{'class':'ratings'}).find_all('div',{'class':'star-w'})
                except:
                    puan=None
                    
                index=0
                toplam=0
                if(puan is not None):
                        for x in puan:
                                m=str(x.find('div',{'class':'full'},{'style':'width'})).split(':')
                                if(m[1].split('%')[0]!='0;max-width'):
                                    toplam+=int(m[1].split('%')[0])
                                    index+=1
                                else:
                                    str2=str(m[1].split('%')[0]).split(';')[0]
                                    toplam+=int(str2)
                                    index+=1   
                                if(index==5):
                                    rating=toplam/100.0
                                    product_ratings.append(rating)
                                    toplam=0
                                    index=0     
                else:
                    product_ratings.append('Puanlanmamış')    
        for url in product_urls:
            response2=requests.get(url)
            soup2=BeautifulSoup(response2.content,'html.parser')
            features=soup2.find('div',{'class':'detail-border'}).find('ul',{'class':'detail-attr-container'}).find_all('li')
            image_url=soup2.find('main',{'id':'product-detail-app'}).find('img')
            product_image_urls.append(image_url['src'])
            disk_tipi=""
            toplam_kapasite=""
            for feature in features:
                if(feature.span.text=='İşlemci Tipi'):
                    islemci_tipi=feature.find_all('span')[1].text
                elif(feature.span.text=='İşletim Sistemi'):
                    isletim_sistemi=feature.find_all('span')[1].text
                elif(feature.span.text=='İşlemci Nesli'):
                    islemci_nesli=feature.find_all('span')[1].text
                elif(feature.span.text=='SSD Kapasitesi'):
                    ssd_kapasitesi=feature.find_all('span')[1].text
                    disk_tipi="SSD"
                elif(feature.span.text=='Ekran Boyutu'):
                    ekran_boyutu=feature.find_all('span')[1].text
                elif(feature.span.text=='Ram (Sistem Belleği)'):
                    ram=feature.find_all('span')[1].text
                elif(feature.span.text=='Hard Disk Kapasitesi'):
                    hdd_kapasitesi=feature.find_all('span')[1].text
                elif(feature.span.text=='İşlemci Modeli'):
                    islemci_modeli=feature.find_all('span')[1].text
            
            if(hdd_kapasitesi=="Yok" or hdd_kapasitesi=='HDD Yok'):
                disk_tipi="SSD"
                toplam_kapasite=ssd_kapasitesi
            elif(ssd_kapasitesi=="Yok" or ssd_kapasitesi=='SSD Yok'):
                disk_tipi="HDD"
                toplam_kapasite=hdd_kapasitesi
            elif((ssd_kapasitesi!="Yok" or ssd_kapasitesi!="SSD Yok") and (hdd_kapasitesi!="Yok" or hdd_kapasitesi!='HDD Yok')):
                disk_tipi='SSD+HDD'
                toplam_kapasite=ssd_kapasitesi+"/"+hdd_kapasitesi   
                
            model_no=""
            pro_price=product_prices[index2]
            pro_price=self.shapeFiyat(pro_price)
            pro_name=product_names[index2]
            pro_modal_name=product_modal_names[index2]
            pro_rating=product_ratings[index2]
            pro_url=product_urls[index2]
            pro_image_url=product_image_urls[index2]
            pro_title=product_titles[index2]
            index2=index2+1
            pro_site="Trendyol"
            
            if(islemci_tipi.find('Intel')!=-1 or islemci_tipi.find('INTEL')!=-1):
                split=islemci_nesli.split('.')[0]
                islemci_nesli=split
            elif(islemci_tipi.find('AMD')!=-1 or islemci_tipi.find('Amd')!=-1):
                islemci_nesli=islemci_modeli[0]
            
            ekran_boyutu=self.shapeEkranBoyutu(ekran_boyutu)
            isletim_sistemi=self.shapeIsletimSistemi(isletim_sistemi)
            
            
            productDict = {
                        'marka':pro_name,
                        'modelAdi':pro_modal_name,
                        'modelNo':model_no,
                        'isletimSistemi':isletim_sistemi,
                        'islemciTipi':islemci_tipi,
                        'islemciNesli':islemci_nesli,
                        'ram':ram,
                        'diskBoyutu':toplam_kapasite,
                        'diskTuru':disk_tipi,
                        'ekranBoyu':ekran_boyutu,
                        'puani':pro_rating,
                        'fiyat':pro_price,
                        'imageLink':pro_image_url,
                        'prodLink':url,
                        'prodTitle':pro_title,
                        'site':pro_site,
                        'id':self.product_id,
                    }
            self.product_id=self.product_id+1
            self.pcTrendyolList.append(productDict)       
            
    def teknosa(self):
        product_links=[]
        product_titles=[]
        product_prices=[]
        product_marka_names=[]
        product_base_image_urls=[]
        index2=0
        for page in range(1,40):
            base_url="https://www.teknosa.com/laptop-notebook-c-116004?s=%3Arelevance&page={0}".format(page)
            headers={
                "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36"
            }

            response=requests.get(base_url,headers=self.headers)
            soup=BeautifulSoup(response.content,'html.parser')

            products=soup.find('div',{'class':'products'}).find_all('div',{'id':'product-item'})

            

            for product in products:
                product_url=product.find('a',{'class':'prd-link'}).get('href')
                product_base_url="https://www.teknosa.com"+product_url
                product_links.append(product_base_url)
                product_title=product.find('div',{'class':'prd-body'}).h3.text.strip()
                product_titles.append(product_title)
                product_price=product.find('div',{'class':'prd-amount'}).find('div',{'class':'prd-prc2'}).span.text
                product_prices.append(product_price.strip())
                product_marka_names.append(product_title.split(' ')[0])
                product_base_image_url=product.find('div',{'class':'prd-media'}).find('figure',{'class':'responsive'}).find('img').get('data-srcset')
                if product_base_image_url is None:
                    product_base_image_url=product.find('div',{'class':'prd-media'}).find('figure',{'class':'responsive'}).find('img').get('src')
                    product_base_image_urls.append(product_base_image_url)
                else:
                    product_base_image_urls.append(product_base_image_url)

        for pr_link in product_links:
            
            response2=requests.get(pr_link,headers=self.headers)
            soup2=BeautifulSoup(response2.content,'html.parser')
            
            product_rating=soup2.find('div',{'class':'bv-flex-container-column'})
            features=soup2.find('div',{'class':'pdp-accordion'})
            if features == None:
                index2 = index2 +1
                continue
                
            features=features.find('div',{'class':'pdp-acc pdp-section'})
            if features == None:
                index2 = index2 +1
                continue
            
            features=features.find('div',{'class':'ptf-body'})

            if features == None:
                index2 = index2 +1
                continue
            
            features=features.find_all('table')

            if features == None:
                index2 = index2 +1
                continue
            

            nammes=[]
            fss=[] 
            for m in features:
                names=m.find_all('th')
                for name in names:
                    nammes.append(name.text)
                fs=m.find_all('td')
                for fsss in fs:
                    fss.append(fsss.text) 
            model_kodu = ""
            for i in range(0,len(nammes)):
                
                if(nammes[i]=='SSD Kapasitesi'):
                    ssd_kapasitesi=fss[i]
                elif(nammes[i]=='Ekran Boyutu'):
                    ekran_boyutu=fss[i]
                elif(nammes[i]=='Model Kodu'):
                    model_kodu=fss[i]
                elif(nammes[i]=='HDD Kapasitesi'):
                    hdd_kapasitesi=fss[i]
                elif(nammes[i]=='Disk Türü'):
                    disk_turu=fss[i]
                elif(nammes[i]=='İşlemci'):
                    islemci=fss[i]
                elif(nammes[i]=='İşlemci Nesli'):
                    islemci_nesli=fss[i]
                elif(nammes[i]=='İşletim Sistemi Yazılımı'):
                    isletim_sistemi=fss[i]
                elif(nammes[i]=='Ram'):
                    ram=fss[i]
            
            
            pro_title=product_titles[index2]
            pro_price=product_prices[index2]
            pro_price=self.shapeFiyat(pro_price)
            pro_name=product_marka_names[index2]
            pro_modal_name=product_titles[index2].split(' ')[1]
            pro_url=product_links[index2]
            pro_image_url=product_base_image_urls[index2]

            index2=index2+1
            if model_kodu == "":
                continue

            
            pro_site="Teknosa"
            
            if(hdd_kapasitesi!='Yok' and ssd_kapasitesi!='Yok'):
                kapasite=(hdd_kapasitesi)+(ssd_kapasitesi)
                disk_turu='SSD+HDD'
            elif(hdd_kapasitesi=='Yok' and ssd_kapasitesi!='Yok'):
                kapasite=ssd_kapasitesi
                disk_turu='SSD'
            elif(ssd_kapasitesi=='Yok' and hdd_kapasitesi!='Yok'):
                kapasite=hdd_kapasitesi
                disk_turu='HDD'
            
            islemci_nesli=self.teknosaNesilShaper(islemci_nesli)
            ekran_boyutu=self.shapeEkranBoyutu(ekran_boyutu)
            isletim_sistemi=self.shapeIsletimSistemi(isletim_sistemi)
            
            productDict = {
                            'marka':pro_name,
                            'modelAdi':pro_modal_name,
                            'modelNo':model_kodu,
                            'isletimSistemi':isletim_sistemi,
                            'islemciTipi':islemci,
                            'islemciNesli':islemci_nesli,
                            'ram':ram,
                            'diskBoyutu':kapasite,
                            'diskTuru':disk_turu,
                            'ekranBoyu':ekran_boyutu,
                            'puani':'0',
                            'fiyat':pro_price,
                            'prodLink':pr_link,
                            'imageLink':pro_image_url,
                            'prodTitle':pro_title,
                            'site':pro_site,
                            'id':self.product_id
            }
            self.product_id = self.product_id + 1
            print(index2)
            print(productDict)
            self.pcTeknosaList.append(productDict)

    def ciceksepeti(self):
        product_links = []
        product_prices = []
        product_image_links=[]
        product_titles=[]
        index = 0
        for aa in range(1,40):
            urlForCicekSepeti = "https://www.ciceksepeti.com/dizustu-bilgisayar-laptop?page={0}".format(aa)
            print("Processing for {0}".format(urlForCicekSepeti))
            response=requests.get(urlForCicekSepeti)
            html=response.content
            soup=BeautifulSoup(html,'html.parser')
            isletimsistemi='Freedos'
            product_list=soup.find('div',{'class':'products'}).find_all('div',{'class':'products__item'})


            for item in product_list:
                  
                    link=item.find('a',{'class':'products__item-link'}).get('href')
                    product_url='https://www.ciceksepeti.com'+link
                    product_links.append(product_url)
                    
                    product_price=item.find('div',{'class':'price price--now'}).find('div',{'class':'price__left'}).find('span',{'class':'price__integer-value'}).text
                    product_prices.append(product_price)
                    
                    prod_image_link=item.find('img',{'class':'products__item-img lazyload'}).get('data-src')
                    product_image_links.append(prod_image_link)
                    
                    prod_title=item.find('p',{'class':'products__item-title'}).text
                    product_titles.append(prod_title)

                    fiyat=product_prices[index]
                    fiyat=self.shapeFiyat(fiyat)
                    prodTitle=product_titles[index]
                    index=index+1
                    model_adi=prodTitle.split(" ")[1]
                    title_split=prodTitle.split(' ')
                    marka=title_split[0]
                    model_no=self.cs_modalnoshaper(prodTitle)
                    site='ÇiçekSepeti'
                    puani='0'
                    productDict = {
                                'marka':marka,
                                'modelAdi':"",
                                'modelNo':"",
                                'isletimSistemi':"",
                                'islemciTipi':"",
                                'islemciNesli':"",
                                'ram':"",
                                'diskBoyutu':"",
                                'diskTuru':"",
                                'ekranBoyu':"",
                                'puani':puani,
                                'fiyat':fiyat,
                                'prodLink':product_url,
                                'imageLink':prod_image_link,
                                'prodTitle':prodTitle,
                                'site':site,
                                'id':self.product_id,
                            }
                    self.product_id=self.product_id+1
                    self.pcCicekSepetiList.append(productDict)

    def n11NesilShaper(self,item):
        if item == None:
            return 'Yok'
        item=item.strip()
        if(item.find('AMD')!=-1 or item.find('Ryzen')!=-1 or item.find('RYZEN')!=-1 or item.find('Amd')!=-1):

                cpu_split=item.split(' ')
                islemci_nesli=cpu_split[-1]
                if(islemci_nesli.find('-')!=-1):
                    islemci_nesil=islemci_nesli.split('-')[-1]
                else:
                    islemci_nesil=islemci_nesli
                
                return islemci_nesil[0]
            
        elif(item.find('tel')!=-1 or item.find('TEL')!=-1):
            if item.find('.') != -1:
            # nokta bulundu
                item = item[:item.find('.')].strip()
                return item
            elif item.find('-') != -1:
                no = item[item.find('-')+1:item.find('-')+3]
                if(no.isnumeric()):
                    if int(no)>12:
                        no=item[item.find('-')+1:item.find('-')+2]
                else:
                    no=item[item.find('-')+1:item.find('-')+1]
                return no
                    
            else:
                item = 'Yok'
                return item
            
    def teknosaNesilShaper(self,item):
    
        nesil=item.split(' ')[-1]
        if(nesil!='Yok'):
            nesil2=nesil.split('.')[0]
            return nesil2   
        return 'Yok'

        
        return item[0]
            
    def shapeFiyat(self, item):
        
        if item.find('T') !=-1 :
            item = item[:item.find('T')].strip()

        
        if item.find('.') != -1 :
            item = item.replace('.','')
         
        
        if item.find(',') != -1:
            item = item.replace(',','.')
         

        # finish cleaning

        # str to float

        item = float(item)
        return item
    
    def shapeEkranBoyutu(self, item):

        if item.find('"') != -1:
            item = item[:item.find('"')].strip()
        
        elif item.find('i') != -1:
            item = item[:item.find('i')].strip()

        if item.find('.') != -1:
            item = item.replace('.',',')
        
        return item
       
    def shapeIsletimSistemi(self, item):

        if item.find('Free') != -1:
            item = 'Freedos'
        if item.find('Yok')!=-1:
            item='Freedos'
        return item
        
    def cs_modalnoshaper(self,title):
        
        title_split=title.split(' ')
        marka=title_split[0]
        if(marka=="Lenovo" or marka=="LENOVO"):
            if((title_split[-1]).startswith('20') or (title_split[-1]).startswith('82') or title_split[-1].startswith('21')):
                return title_split[-1]
            else:
                for m in title_split:
                    if(m.startswith('20') or m.startswith('82')):
                        if(m.startswith('20GB')==False):
                            return m
                return 'Belirtilmemiş'
        elif((marka=="Asus" or marka=="ASUS") or (marka=='Msi' or marka=='MSI')):
            for title in title_split:
                if(title.find('-')!=-1):
                    array=title.split('-')
                    array[0]=str(array[0])
                    if(array[0]!='i3' and array[0]!='i5' and array[0]!='i7' and array[0]!='i9' and array[0]!='I3' and array[0]!='I5' and array[0]!='I7' and array[0]!='I9'):
                        return title
                    else:
                        continue
            return 'Belirtilmemiş'
        else:
            return 'Belirtilmemiş'

    def csNesilShaper(self,title):
        
        if(title==None):
            return 'Yok'
        if(title.find('.')!=-1):
            
            title_split=title.split('.')[0]
            
            return title_split
        
        return 'Yok'
      
    def laptopstore41(self):
        list=[]
        for page in range(1,17):
            
            base_url="http://127.0.0.1:8000/?page={}".format(page)
            response=requests.get(base_url)
            soup=BeautifulSoup(response.content,'html.parser')
            products=soup.find_all('div',{'class':'col-sm-3'})
            for prod in products:
                prodTitle=prod.find('h5').text.strip()
                prodLink="127.0.0.1:8000"+prod.find('a').get('href').strip()
                rating_price=prod.find('div',{'class':'card mb-3'}).find('ul',{'class':'list-group list-group-flush'}).find_all('div',{'class':'col'})
                index=0
                for data in rating_price:
                    c=data.find_all('p',{'class':'fw-bold'})
                    for b in c:
                        if(index==0):
                            prodrating=b.text
                        elif(index==1):
                            prodprice=b.text
                        index=index+1
                productDict = {
                            'marka':"",
                            'modelAdi':"",
                            'modelNo':"",
                            'isletimSistemi':"",
                            'islemciTipi':"",
                            'islemciNesli':"",
                            'ram':"",
                            'diskBoyutu':"",
                            'diskTuru':"",
                            'ekranBoyu':"",
                            'puani':prodrating,
                            'fiyat':prodprice,
                            'site':'41LaptopStore',
                            'prodLink':prodLink,
                            'prodImageLink':"",
                            'prodTitle':prodTitle,
                            'id':self.product_id
                        }
                self.product_id=self.product_id+1 
                self.pcLaptopStore41.append(productDict)
        
        

up = UcuzlukPazari_Database()    
          
scraping = WebScrapping()

# print('N11 Data Scrapping')
# scraping.n11()
# up.control_add_product(scraping.pcN11List)

# print('Teknosa Data Scrapping')
# scraping.teknosa()
# up.control_add_product(scraping.pcTeknosaList)

# print("Trendyol")
# scraping.trendyol()
# up.control_add_product(scraping.pcTrendyolList)



# print("Cicek")
# scraping.ciceksepeti()

# up.control_add_product(scraping.pcCicekSepetiList)

# print("hepsibur")
# scraping.hepsiBurada()

# up.control_add_product(scraping.pcHepsiBuradaList)

scraping.laptopstore41()
up.add_dict_product(scraping.pcLaptopStore41)

# (Hepsinden data çekilip veritabanına başarılı bir şekilde yazılıyor. Aynı ürünlerin bulunup sitede gösterilmesi gerekir. Kategoriler ile eşlenmesi gerekir. Index yapısına bakılması gerekir. Search button aktif edilmesi gerekir. Ayrıntı bilgilerinin görüntülenmesi gerekir.)



import requests
from bs4 import BeautifulSoup
from pymongo import MongoClient


class LaptopStore41_Database:
    
    client=MongoClient('mongodb://{0}:{0}@localhost:27017'.format('abvag','abvag'))
    db=client["WebScraping"]
    mycol=db["shopping_products"]
    
    def __init__(self) -> None:     
        pass
    
    def add_dict_product(self,prod_dict):
        self.mycol.insert_many(prod_dict)
        
    def add_one_product(self,dict):
        self.mycol.insert_one(dict)
        
    def control_add_product(self,prod_dict):
        
        prod= self.mycol.find()
        if(prod==None):
            
            self.add_dict_product(prod_dict)
            
        else:
            for p in prod_dict:
                    
                    for a in prod:
                        
                        if(a['prodTitle']==p['prodTitle']):
                            
                            self.delete_product(a)
                            break
               
                    self.add_one_product(p)
                  
    def delete_product(self,dict):
        
        self.mycol.delete_one(dict)
            
    def delete_col(self):
        
        self.mycol.delete_many({'site':'41LaptopStore'})


def laptopstore41():
    id= 30000
    for page in range(1,17):
        
        base_url="http://127.0.0.1:8000/?page={}".format(page)
        response=requests.get(base_url)
        soup=BeautifulSoup(response.content,'html.parser')
        products=soup.find_all('div',{'class':'col-sm-3'})
        for prod in products:
            prodTitle=prod.find('h5').text.strip()
            prodLink="127.0.0.1:8000"+prod.find('a').get('href').strip()
            rating_price=prod.find('div',{'class':'card mb-3'}).find('ul',{'class':'list-group list-group-flush'}).find_all('div',{'class':'col'})
            index=0
            for data in rating_price:
                c=data.find_all('p',{'class':'fw-bold'})
                for b in c:
                    if(index==0):
                        prodrating=b.text
                    elif(index==1):
                        prodprice=b.text
                    index=index+1
            productDict = {
                        'marka':"",
                        'modelAdi':"",
                        'modelNo':"",
                        'isletimSistemi':"",
                        'islemciTipi':"",
                        'islemciNesli':"",
                        'ram':"",
                        'diskBoyutu':"",
                        'diskTuru':"",
                        'ekranBoyu':"",
                        'puani':prodrating,
                        'fiyat':prodprice,
                        'site':'41LaptopStore',
                        'prodLink':prodLink,
                        'prodImageLink':"",
                        'prodTitle':prodTitle,
                        'id':id
                    }
            id=id+1   
            print(productDict)
  
db= LaptopStore41_Database()
db.delete_col()

from django.apps import AppConfig


class AuthenticationConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'authentication'

from django.urls import path
from . import views
urlpatterns = [

    path("login",views.login_request,name="login"),
    path("register",views.register_request,name="register"),
    path("logout",views.logout_request,name="logout"),
]



import django
from django.shortcuts import redirect, render
from django.contrib.auth import authenticate,login,logout
from django.contrib.auth.models import User
from django.core.mail import send_mail
from django.template.loader import render_to_string
from EcommerceWeb import settings


def login_request(request):
    
    if request.user.is_authenticated:
        return redirect('home')
    
    
    if request.method == "POST":
        kullanici_adi=request.POST["username"]
        parola=request.POST["password"]
        
        user=authenticate(request,username=kullanici_adi,password=parola)
        
        if user is not None:
            login(request,user)
            return redirect("home")
        else:
            return render(request,"authentication/login.html",{
                "error": "Kullanıcı adı veya şifre yanlış."
            })
            
    return render(request,"authentication/login.html")




def register_request(request):
    
    if request.user.is_authenticated:
        return redirect('home')
    
    
    if(request.method=="POST"):
        username=request.POST["username"]
        password=request.POST["password"]
        repassword=request.POST["repassword"]
        phonenumber=request.POST["phone"]
        isim=request.POST["firstname"]
        soyisim=request.POST["lastname"]
        email=request.POST["email"]
        adres=request.POST["adres"]
        
        if password == repassword:
            if User.objects.filter(username=username).exists():
                return render(request,"authentication/register.html",{
                "error": "Böyle bir kullanıcı zaten var.",
                "username": username,
                "email": email,
                "firstname": isim,
                "lastname": soyisim,
                "phonenumber": phonenumber,
                "adres":adres
            })
            else:
                if User.objects.filter(email=email).exists():
                    return render(request,"authentication/register.html",{
                    "error": "Girilen email zaten kullanılıyor.",
                     "username": username,
                     "email": email,
                     "firstname": isim,
                     "lastname": soyisim,
                     "phonenumber": phonenumber,
                     "adres":adres
                })
                else:
                    
                    html=render_to_string('authentication/email_template.html',{                
                             'name':isim
                             
                    })
                    
                    send_mail(
                        '41KocaeliLaptopStore a Hoşgeldin!',
                        html,
                        settings.EMAIL_HOST_USER,
                        [email],
                    )
                    
                    
                    user= User.objects.create_user(username=username,email=email,first_name=isim,last_name=soyisim,password=password)
                    user.save()
                    
                    
                    
                    
                    
                    return redirect("login")
        else:
            return render(request,"authentication/register.html",{
                "error": "Girilen parolalar eşleşmiyor.",
                 "username": username,
                 "email": email,
                 "firstname": isim,
                 "lastname": soyisim,
                 "phonenumber": phonenumber,
                 "adres":adres
            })
    

    return render(request,"authentication/register.html")

def logout_request(request):
    logout(request)
    return redirect("home")

from django.apps import AppConfig


class CrudConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'crud'

from django.urls import path
from . import views


urlpatterns = [
    path("add", views.addProduct, name="addProduct"),
    path("update/<int:id>", views.updateProduct, name="updateProduct"),
    path("delete", views.deleteProduct, name="deleteProduct")
]

from django.shortcuts import render, redirect
import pymongo
from ecommerce.models import MatchProducts

# Create your views here.


def addProduct(request):

    if request.method == "POST":
        print("pOSTA GİRDİM")
        marka = request.POST['marka']
        modelAdi = request.POST['modelAdi']
        modelNo = request.POST['modelNo']
        isletimSistemi = shapeIsletimSistemi(request.POST['isletimSistemi'])
        islemciTipi = request.POST['islemciTipi']
        islemciNesli = request.POST['islemciNesli']
        ram = request.POST['ram']
        diskBoyutu = request.POST['diskBoyutu']
        diskTuru = request.POST['diskTuru']
        ekranBoyu = shapeEkranBoyutu(request.POST['ekranBoyu'])
        puani = request.POST['puani']
        fiyat = shapeFiyat(request.POST['fiyat'])
        prodLink = request.POST['prodLink']
        prodImageLink = request.POST['prodImageLink']
        prodTitle = request.POST['prodTitle']
        site = request.POST['site']
        id = request.POST['id']

        print(marka)
        # baglanma islemi
        myClient = pymongo.MongoClient('mongodb://abvag:abvag@localhost:27017')

        # database e gimre
        mydb = myClient['WebScraping']


        myCollection = mydb['ecommerce_matchproducts']
        base = {}
        base['modelNo']= modelNo
        
        tempProduct = myCollection.find(base)
        tempProduct = list(tempProduct)
        
        if len(tempProduct) == 0 :
            base = {}

            base['marka']= marka
            base['modelAdi']= modelAdi
            base['modelNo']= modelNo
            base['isletimSistemi']= isletimSistemi
            base['islemciTipi']= islemciTipi
            base['islemciNesli']= islemciNesli
            base['ram']= ram
            base['diskBoyutu']= diskBoyutu
            base['diskTuru']= diskTuru
            base['ekranBoyu']= ekranBoyu
            base['puani']= puani
            base['fiyat']= float(fiyat)
            base['prodLink']= prodLink
            base['prodImageLink']= prodImageLink
            base['prodTitle']= prodTitle
            base['site']= site
            base['id']= int(id)

            myCollection.insert_one(base)
            print("Siteye Eklendi")

            # veri tabanına kaydettim

            # sen buray tekrardan veri tabanından kayıtlı verileri kendi sitene her zmanki gibi cek

            return redirect('home')

        else:
            print("Bu veri Sitemizde Zaten var")
            return redirect('home')

    return render(request, "crud/add.html")

def shapeFiyat(self, item):
        
        if item.find('T') !=-1 :
            item = item[:item.find('T')].strip()

        
        if item.find('.') != -1 :
            item = item.replace('.','')
         
        
        if item.find(',') != -1:
            item = item.replace(',','.')
         

        # finish cleaning

        # str to float

        item = float(item)
        return item
    
def shapeEkranBoyutu(self, item):

    if item.find('"') != -1:
        item = item[:item.find('"')].strip()
    
    elif item.find('i') != -1:
        item = item[:item.find('i')].strip()

    if item.find('.') != -1:
        item = item.replace('.',',')
    
    return item

def shapeIsletimSistemi(self, item):

    if item.find('Free') != -1:
        item = 'Freedos'
    if item.find('Yok')!=-1:
        item='Freedos'
    return item

def updateProduct(request, id):

    selectedProd = MatchProducts.objects.get(id=id)

    prod={
        "selectedProd": selectedProd
    }



    if request.method == "POST":
        print("pOSTA GİRDİM")
        marka = request.POST['marka']
        modelAdi = request.POST['modelAdi']
        modelNo = request.POST['modelNo']
        isletimSistemi = request.POST['isletimSistemi']
        islemciTipi = request.POST['islemciTipi']
        islemciNesli = request.POST['islemciNesli']
        ram = request.POST['ram']
        diskBoyutu = request.POST['diskBoyutu']
        diskTuru = request.POST['diskTuru']
        ekranBoyu = request.POST['ekranBoyu']
        puani = request.POST['puani']
        fiyat = request.POST['fiyat']
        prodLink = request.POST['prodLink']
        prodImageLink = request.POST['prodImageLink']
        prodTitle = request.POST['prodTitle']
        site = request.POST['site']
        id = request.POST['id']

        print(marka)
        # baglanma islemi
        myClient = pymongo.MongoClient('mongodb://abvag:abvag@localhost:27017')
        myClient2 = pymongo.MongoClient('mongodb://abvag:abvag@localhost:27017')
        # database e gimre
        mydb = myClient['WebScraping']
        my_db2 = myClient2['WebScraping']

        myCollection = mydb['ecommerce_matchproducts']
        myCollection2 = my_db2['shopping_matchproducts']
        base = {}
        base['modelNo']= modelNo
        
        tempProduct = myCollection.find(base)
        tempProduct2 = myCollection2.find(base)
        tempProduct = list(tempProduct)
        tempProduct2 = list(tempProduct2)
        if len(tempProduct) != 0 :
            
            kalıp2 = {}

            kalıp2['modelNo']=modelNo
            toplu = {}
            toplu['marka']= marka
            toplu['modelAdi']= modelAdi
            toplu['modelNo']= modelNo
            toplu['isletimSistemi']= isletimSistemi
            toplu['islemciTipi']= islemciTipi
            toplu['islemciNesli']= islemciNesli
            toplu['ram']= ram
            toplu['diskBoyutu']= diskBoyutu
            toplu['diskTuru']= diskTuru
            toplu['ekranBoyu']= ekranBoyu
            toplu['puani']= puani
            toplu['fiyat']= float(fiyat)
            toplu['prodLink']= prodLink
            toplu['prodImageLink']= prodImageLink
            toplu['prodTitle']= prodTitle
            toplu['site']= site
            toplu['id']= int(id)

            kalıp = {}

            kalıp['$set'] = toplu
            myCollection.update_one(kalıp2, kalıp)
            
        if len(tempProduct2) != 0 :
            
            kalıp2 = {}

            if(tempProduct2[0]['site2']=='41LaptopStore'):
                
                kalıp2 = {}

                kalıp2['modelNo']=modelNo
                toplu = {}
                toplu['puani2']= puani
                toplu['fiyat2']= float(fiyat)
                toplu['prodLink2']= prodLink
                kalıp = {}

                kalıp['$set'] = toplu
                myCollection2.update_one(kalıp2, kalıp)
            
            elif(tempProduct2[0]['site3']=='41LaptopStore'):
                
                kalıp2 = {}

                kalıp2['modelNo']=modelNo
                toplu = {}
                toplu['puani3']= puani
                toplu['fiyat3']= float(fiyat)
                toplu['prodLink3']= prodLink
                kalıp = {}

                kalıp['$set'] = toplu
                myCollection2.update_one(kalıp2, kalıp)
            elif(tempProduct2[0]['site4']=='41LaptopStore'):
                
                kalıp2 = {}

                kalıp2['modelNo']=modelNo
                toplu = {}
                toplu['puani4']= puani
                toplu['fiyat4']= float(fiyat)
                toplu['prodLink4']= prodLink
                kalıp = {}

                kalıp['$set'] = toplu
                myCollection2.update_one(kalıp2, kalıp)
            elif(tempProduct2[0]['site5']=='41LaptopStore'):
                
                kalıp2 = {}

                kalıp2['modelNo']=modelNo
                toplu = {}
                toplu['puani5']= puani
                toplu['fiyat5']= float(fiyat)
                toplu['prodLink5']= prodLink
                kalıp = {}

                kalıp['$set'] = toplu
                myCollection2.update_one(kalıp2, kalıp)
            elif(tempProduct2[0]['site6']=='41LaptopStore'):
                
                kalıp2 = {}

                kalıp2['modelNo']=modelNo
                toplu = {}
                toplu['puani6']= puani
                toplu['fiyat6']= float(fiyat)
                toplu['prodLink6']= prodLink
                kalıp = {}

                kalıp['$set'] = toplu
                myCollection2.update_one(kalıp2, kalıp)
           

            print("Urun  Guncelledi")

            # veri tabanına kaydettim

            # sen buray tekrardan veri tabanından kayıtlı verileri kendi sitene her zmanki gibi cek

            return redirect('home')

        else:
            print("Bu veri Sitemizde Bulunmuyor Güncelleyemezsiniz")
            return redirect('home')

        
    


    


    return render(request, "crud/update.html", prod)

def deleteProduct(request):

    if request.method == "POST":
        modelNo = request.POST['modelNo']

        # baglanma islemi
        myClient = pymongo.MongoClient('mongodb://abvag:abvag@localhost:27017')
        myClient2 = pymongo.MongoClient('mongodb://abvag:abvag@localhost:27017')

        # database e gimre
        mydb = myClient['WebScraping']
        mydb2 = myClient2['WebScraping']

        myCollection = mydb['ecommerce_matchproducts']
        myCollection2 = mydb['shopping_matchproducts']

        myCollection.delete_one({'modelNo':modelNo})
        base = {}
        base['modelNo']= modelNo
        tempProduct2 = myCollection2.find(base)
        tempProduct2 = list(tempProduct2)

        if len(tempProduct2) != 0 :
            
            kalıp2 = {}

            if(tempProduct2[0]['site2']=='41LaptopStore'):
                
                kalıp2 = {}

                kalıp2['modelNo']=modelNo
                toplu = {}
                toplu['puani2']= ""
                toplu['fiyat2']= ""
                toplu['prodLink2']= ""
                toplu['site2']= ""
                kalıp = {}

                kalıp['$set'] = toplu
                myCollection2.update_one(kalıp2, kalıp)
            
            elif(tempProduct2[0]['site3']=='41LaptopStore'):
                
                kalıp2 = {}

                kalıp2['modelNo']=modelNo
                toplu = {}
                toplu['puani3']= ""
                toplu['fiyat3']= ""
                toplu['prodLink3']= ""
                toplu['site3'] = ""
                kalıp = {}

                kalıp['$set'] = toplu
                myCollection2.update_one(kalıp2, kalıp)
                
            elif(tempProduct2[0]['site4']=='41LaptopStore'):
                
                kalıp2 = {}

                kalıp2['modelNo']=modelNo
                toplu = {}
                toplu['puani4']= ""
                toplu['fiyat4']= ""
                toplu['prodLink4']= ""
                toplu['site4'] = ""
                kalıp = {}

                kalıp['$set'] = toplu
                myCollection2.update_one(kalıp2, kalıp)
                
            elif(tempProduct2[0]['site5']=='41LaptopStore'):
                
                kalıp2 = {}

                kalıp2['modelNo']=modelNo
                toplu = {}
                toplu['puani5']= ""
                toplu['fiyat5']= ""
                toplu['prodLink5']= ""
                toplu['site5']= ""
                kalıp = {}

                kalıp['$set'] = toplu
                myCollection2.update_one(kalıp2, kalıp)
                
            elif(tempProduct2[0]['site6']=='41LaptopStore'):
                
                kalıp2 = {}

                kalıp2['modelNo']=modelNo
                toplu = {}
                toplu['puani6']= ""
                toplu['fiyat6']= ""
                toplu['prodLink6']= ""
                toplu['site6'] = ""
                kalıp = {}

                kalıp['$set'] = toplu
                myCollection2.update_one(kalıp2, kalıp)
           

        print('Isleminiz Gerceklesmistir')

        return redirect('home')

    return render(request, "crud/delete.html")

Hey {{name}}!

Sitemize kayıt olduğun için sana teşekkür ederiz.

Sitemizdeki laptoplara hemen göz atmak için tıkla! 

http://127.0.0.1:8080

Her üründe TLlerce indirim!

- KocaeliLaptopStore41

{% extends "base.html" %}
{% load static %}

{% block title%} Giriş Yap {% endblock%}

{%block main%}

<main>

<div class="container mt-3">

    <div class="col">

    <h1> Giriş Yap</h1>
    <hr>

    <form action="{% url 'login' %}" method="POST">
        {% csrf_token %}
        {% if error %}
         <div class="alert alert-danger">
                {{error}}
            </div> 
        {% endif %}

        <div class="mb-3">
            <label for="username" class= "form-label">Kullanıcı Adı</label>
            <input type="text" class="form-control" name="username">
        </div>

        <div class="mb-3">
            <label for="password" class= "form-label">Parola</label>
            <input type="password" class="form-control" name="password">
        </div>

        <div class="mb-3"></div>

        <input type="submit" value="Login" class="btn btn-primary">



    </form> 




    </div>

</div>
    



</main>


{% endblock%}

{% extends "base.html" %}
{% load static %}

{% block title%} Kayıt Ol {% endblock%}

{%block main%}

<main>

    <div class="col">

        <h1> Kayıt Ol</h1>
        <hr>
    
        <form action="{% url 'register' %}" method="POST">
            {% csrf_token %}
            {% if error %}
             <div class="alert alert-danger">
                    {{error}}
                </div> 
            {% endif %}
    
            <div class="mb-3">
                <label for="username" class= "form-label">Kullanıcı Adı</label>
                <input type="text" class="form-control" name="username" value="{{username}}">
            </div>
            <div class="mb-3">
                <label for="email" class= "form-label">Email</label>
                <input type="email" class="form-control" name="email" value="{{email}}">
            </div>

            <div class="mb-3">
                <label for="tel" class= "form-label">Telefon Numarası</label>
                <input type="tel" class="form-control" name="phone" pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" value="{{phonenumber}}">
            </div>

            <div class="row mb-3">
            <div class="col">

                <label for="firstname" class= "form-label">Ad</label>
                <input type="text" class="form-control" name="firstname" value="{{firstname}}">

            </div>
            <div class="col">

                <label for="lastname" class= "form-label">Soyad</label>
                <input type="text" class="form-control" name="lastname" value="{{lastname}}">


            </div>
            </div>
       
    
            <div class="row mb-3">
            
            <div class="col">

                <label for="password" class= "form-label">Parola</label>
                <input type="password" class="form-control" name="password">

            </div>
            
            <div class="col">

                <label for="repassword" class= "form-label">Tekrar Parola</label>
                <input type="password" class="form-control" name="repassword">

            </div>       
            </div>

            <div class="mb-3">
                <label for="adres" class= "form-label">Adres</label>
                <input type="text" class="form-control" name="adres"  value="{{adres}}">
            </div>


            <div class="mb-3"></div>
    
            <input type="submit" value="Register" class="btn btn-primary">
    
    
    
        </form> 
    
    
    
    
        </div>



</main>


{% endblock%}

{% extends "base.html" %}
{% load static %}

{% block title%} AddPage {% endblock%}

{%block main%}

<div class="container mt-3">

    <div class="col">
        <h1 class="display-6">Add Product</h1>
        <hr>
  
        <!-- ilgili url e post edicez gondericez bilgilerimizi -->
        <!-- id burda js tarafından kullanılır ama name server tarafından kullanılır
             biz bilgileri servera post edecegimizde anahtar kelimeleri name tagıyla yaptık -->
        <form  method="POST">
           {% csrf_token %}
           <!-- bu token güvenlig icin formu getleyen ve postlayan aynı kisği mi kontrol eder
                 olmazsa calismaz -->
           
           <div class="mb-3">
            <label for="marka" class="form-label">Marka</label>
            <input type="text" class="form-control" name="marka" aria-describedby="markaHelp">
            
          </div>

          <div class="mb-3">
            <label for="modelAdi" class="form-label">Model Adı</label>
            <input type="text" class="form-control" name="modelAdi">
          </div>

          <div class="mb-3">
            <label for="modelNo" class="form-label">Model No</label>
            <input type="text" class="form-control" name="modelNo">
          </div>
  
           <div class="mb-3">
             <label for="isletimSistemi" class="form-label">İşletim Sistemi</label>
             <input type="text" class="form-control" name="isletimSistemi" aria-describedby="isletimSistemiHelp">
            
           </div>

           <div class="mb-3">
             <label for="islemciTipi" class="form-label">İşlemci Tipi</label>
             <input type="text" class="form-control" name="islemciTipi">
           </div>

           <div class="mb-3">
            <label for="islemciNesli" class="form-label">İslemci Nesli</label>
            <input type="text" class="form-control" name="islemciNesli">
          </div>

          <div class="mb-3">
            <label for="ram" class="form-label">Ram</label>
            <input type="text" class="form-control" name="ram">
          </div>

          <div class="mb-3">
            <label for="diskBoyutu" class="form-label">Disk Boyutu</label>
            <input type="text" class="form-control" name="diskBoyutu">
          </div>

          <div class="mb-3">
            <label for="diskTuru" class="form-label">Disk Türü</label>
            <input type="text" class="form-control" name="diskTuru">
          </div>

          <div class="mb-3">
            <label for="ekranBoyu" class="form-label">Ekran Boyu</label>
            <input type="text" class="form-control" name="ekranBoyu">
          </div>

          <div class="mb-3">
            <label for="puani" class="form-label">Puanı</label>
            <input type="text" class="form-control" name="puani">
          </div>

          <div class="mb-3">
            <label for="fiyat" class="form-label">Fiyat</label>
            <input type="text" class="form-control" name="fiyat">
          </div>

          <div class="mb-3">
            <label for="prodLink" class="form-label">ProdLink</label>
            <input type="text" class="form-control" name="prodLink">
          </div>

          <div class="mb-3">
            <label for="prodImageLink" class="form-label">ProdImageLink</label>
            <input type="text" class="form-control" name="prodImageLink">
          </div>

          <div class="mb-3">
            <label for="prodTitle" class="form-label">Prod Title</label>
            <input type="text" class="form-control" name="prodTitle">
          </div>

          <div class="mb-3">
            <label for="site" class="form-label">Site</label>
            <input type="text" class="form-control" name="site">
          </div>

          <div class="mb-3">
            <label for="id" class="form-label">Id</label>
            <input type="text" class="form-control" name="id">
          </div>

           <button type="submit" class="btn btn-primary mb-3">Submit</button>
        </form>
     </div>
   
</div>


{% endblock%}

{% extends "base.html" %}
{% load static %}

{% block title%} AddPage {% endblock%}

{%block main%}

<div class="container mt-3">

    <div class="col">
        <h1 class="display-6">Delete Product</h1>
        <hr>
  
        <!-- ilgili url e post edicez gondericez bilgilerimizi -->
        <!-- id burda js tarafından kullanılır ama name server tarafından kullanılır
             biz bilgileri servera post edecegimizde anahtar kelimeleri name tagıyla yaptık -->
        <form  method="POST">
           {% csrf_token %}
           <!-- bu token güvenlig icin formu getleyen ve postlayan aynı kisği mi kontrol eder
                 olmazsa calismaz -->

          <div class="mb-3">
            <label for="modelNo" class="form-label">Model No</label>
            <input type="text" class="form-control" name="modelNo">
          </div>
  
         
           <button type="submit" class="btn btn-primary mb-3">Submit</button>
        </form>
     </div>
   
</div>


{% endblock%}

{% extends "base.html" %}
{% load static %}

{% block title%} AddPage {% endblock%}

{%block main%}

<div class="container mt-3">

    <div class="col">
        <h1 class="display-6">Update Product</h1>
        <hr>
  
        <!-- ilgili url e post edicez gondericez bilgilerimizi -->
        <!-- id burda js tarafından kullanılır ama name server tarafından kullanılır
             biz bilgileri servera post edecegimizde anahtar kelimeleri name tagıyla yaptık -->
        <form  method="POST">
           {% csrf_token %}
           <!-- bu token güvenlig icin formu getleyen ve postlayan aynı kisği mi kontrol eder
                 olmazsa calismaz -->
           
           <div class="mb-3">
            <label for="marka" class="form-label">Marka</label>
            <input type="text" class="form-control" name="marka" value="{{ selectedProd.marka }}" aria-describedby="markaHelp"> 
            
            
          </div>

          <div class="mb-3">
            <label for="modelAdi" class="form-label">Model Adı</label>
            <input type="text" class="form-control" value="{{ selectedProd.modelAdi }}" name="modelAdi">
          </div>

          <div class="mb-3">
            <label for="modelNo" class="form-label">Model No</label>
            <input type="text" class="form-control" value="{{ selectedProd.modelNo }}" name="modelNo">
          </div>
  
           <div class="mb-3">
             <label for="isletimSistemi" class="form-label">İşletim Sistemi</label>
             <input type="text" class="form-control" name="isletimSistemi" value="{{ selectedProd.isletimSistemi }}" aria-describedby="isletimSistemiHelp">
            
           </div>

           <div class="mb-3">
             <label for="islemciTipi" class="form-label">İşlemci Tipi</label>
             <input type="text" class="form-control" value="{{ selectedProd.islemciTipi }}" name="islemciTipi">
           </div>

           <div class="mb-3">
            <label for="islemciNesli" class="form-label">İslemci Nesli</label>
            <input type="text" class="form-control" value="{{ selectedProd.islemciNesli }}" name="islemciNesli">
          </div>

          <div class="mb-3">
            <label for="ram" class="form-label">Ram</label>
            <input type="text" class="form-control" value="{{ selectedProd.ram }}" name="ram">
          </div>

          <div class="mb-3">
            <label for="diskBoyutu" class="form-label">Disk Boyutu</label>
            <input type="text" class="form-control" value="{{ selectedProd.diskBoyutu }}" name="diskBoyutu">
          </div>

          <div class="mb-3">
            <label for="diskTuru" class="form-label">Disk Türü</label>
            <input type="text" class="form-control" value="{{ selectedProd.diskTuru }}" name="diskTuru">
          </div>

          <div class="mb-3">
            <label for="ekranBoyu" class="form-label">Ekran Boyu</label>
            <input type="text" class="form-control" value="{{ selectedProd.ekranBoyu }}" name="ekranBoyu">
          </div>

          <div class="mb-3">
            <label for="puani" class="form-label">Puanı</label>
            <input type="text" class="form-control" value="{{ selectedProd.puani }}" name="puani">
          </div>

          <div class="mb-3">
            <label for="fiyat" class="form-label">Fiyat</label>
            <input type="text" class="form-control" value="{{ selectedProd.fiyat }}" name="fiyat">
          </div>

          <div class="mb-3">
            <label for="prodLink" class="form-label">ProdLink</label>
            <input type="text" class="form-control" value="{{ selectedProd.prodLink }}" name="prodLink">
          </div>

          <div class="mb-3">
            <label for="prodImageLink" class="form-label">prodImageLink</label>
            <input type="text" class="form-control" value="{{ selectedProd.prodImageLink }}" name="prodImageLink">
          </div>

          <div class="mb-3">
            <label for="prodTitle" class="form-label">Prod Title</label>
            <input type="text" class="form-control" value="{{ selectedProd.prodTitle }}" name="prodTitle">
          </div>

          <div class="mb-3">
            <label for="site" class="form-label">Site</label>
            <input type="text" class="form-control" value="{{ selectedProd.site }}" name="site">
          </div>

          <div class="mb-3">
            <label for="id" class="form-label">Id</label>
            <input type="text" class="form-control" value="{{ selectedProd.id }}" name="id">
          </div>

           <button type="submit" class="btn btn-primary mb-3">Submit</button>
        </form>
     </div>
   
</div>


{% endblock%}

{% extends "base.html" %}
{% load static %}

{% block title%} {{prods.modelNo}} {% endblock%}

{%block main%}

<main>
    <div class="mt-4 mx-3">
        <div class="row">

            <!-- products start -->

            <div class="row ">
                <div class="col-sm-6">
                    <div class="container">
                        <center>
                            <img src={{prods.prodImageLink}} alt="Ressim Bulunamadı" class="pcImage img-responsive"
                                style="height: 50%; width: 50%;">
                        </center>
                    </div>
                </div>
                <div class="col-sm-6">

                    <div class="row">
                        <center>
                            <h5>
                                <p class="fw-bold">
                                {{prods.prodTitle}}
                                </p>
                            </h5>
                        </center>
                    </div>
        
                    <hr>

                    <div class="row">
                        <center>
                            
                            <h5>
                                <p class="fw-bold" style="color: orange;">Sepette</p>
                                
                                <p class="fw-bold">
                                {{prods.fiyat}} TL
                                </p>
                            </h5>
                        </center>
                    </div>
                    <hr>
                    <div class="row">
                        <center>
                            
                            <h5>
                                <p class="fw-bold" style="color: orange;">Puanı</p>
                                <p class="fw-bold">
                                {{prods.puani}}
                            </p>
        
                                <h5>
                        </center>
                    </div>

                </div>
            </div>





            



            <!-- product end -->

        </div>

        <h1 class="display-6 mx-3 my-3   ">Ürün Özellikleri</h1>

        <table class="my-3">

            <div class="row  mx-3 mb-2">
                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            Ürün Markası
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{ prods.marka}}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>

                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            İşlemci Tipi
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{prods.islemciTipi}}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>

            </div>

            <div class="row  mx-3 mb-2">
                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            Ram
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{prods.ram}}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>

                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            İşlemci Nesli
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{prods.islemciNesli}}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>
            </div>

            <div class="row  mx-3 mb-2">
                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            Ekran Boyutu
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{prods.ekranBoyu}}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>

                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            Disk Kapasitesi
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{prods.diskBoyutu}}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>
            </div>

            <div class="row  mx-3 mb-2">
                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            Model Adı
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{prods.modelAdi}}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>

                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            Model Numarası
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{prods.modelNo}}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>
            </div>

            <div class="row  mx-3 mb-2">
                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            İşletim Sistemi
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{prods.isletimSistemi}}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>

                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            Disk Tipi
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{prods.diskTuru}}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>
            </div>


        </table>
        <div class="container">
            {% if user.is_authenticated %}
            {% if user.is_staff%}
            <center>
                <a href="{% url 'updateProduct' prods.id %}" class="btn btn-secondary">Güncellemek İçin Tıklayınız</a>
            </center>
            {% endif %}
        </div>
            {% endif %}

</main>

{% endblock %}

{% extends "base.html" %}
{% load static %}

{% block title%} Homepage {% endblock%}

{%block main%}

<main>
    <div class="mt-4 mx-3">
        <div class="row">

            <!-- categories start -->


            <div class="col-sm-2">
                <form action="{% url 'filterByCategory' %}" method="POST">
                    {% csrf_token %}
                    <div class="row mb-4">
                        <center>
                            <button type="submit" class="btn btn-outline-light" id="uygula"
                                style="background-color: orange;">Uygula</button>
                        </center>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">Marka</p>
                            </li>

                            {% for marka in markas %}
                            <li class="list-group-item a">
                                <input class="form-check-input me-1" name="marka" type="checkbox" value={{ marka }}
                                    aria-label="...">
                                {{ marka|title }}
                            </li>
                            {% endfor %}

                        </ul>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">İsletim Sistemi</p>
                            </li>

                            {% for isletimSistemi in isletimSistemis %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="isletimSistemi" type="checkbox"
                                    value="{{isletimSistemi}}" aria-label="...">
                                {{ isletimSistemi|title }}
                            </li>
                            {% endfor %}

                        </ul>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">İslemci Tipi</p>
                            </li>

                            {% for islemciTipi in islemciTipis %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="islemciTipi" type="checkbox"
                                    value="{{ islemciTipi }}" aria-label="...">
                                {{ islemciTipi|title }}
                            </li>
                            {% endfor %}

                        </ul>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">İslemci Nesli</p>
                            </li>

                            {% for islemciNesli in islemciNeslis %}
                            {% if islemciNesli == 0 %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="islemciNesli" type="checkbox" value="Yok"
                                    aria-label="...">
                                Yok
                            </li>
                            {% else %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="islemciNesli" type="checkbox"
                                    value="{{ islemciNesli }}" aria-label="...">
                                {{ islemciNesli }}
                            </li>
                            {% endif %}
                            {% endfor %}


                        </ul>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">Ram</p>
                            </li>

                            {% for ram in rams %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="ram" type="checkbox" value="{{ ram }}"
                                    aria-label="...">
                                {{ ram|title }}
                            </li>
                            {% endfor %}


                        </ul>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">Disk Turu</p>
                            </li>

                            {% for diskTuru in diskTurus %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="diskTuru" type="checkbox" value={{ diskTuru
                                    }} aria-label="...">
                                {{ diskTuru|title }}
                            </li>
                            {% endfor %}


                        </ul>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">Ekran Boyu</p>
                            </li>

                            {% for ekranBoyu in ekranBoyus %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="ekranBoyu" type="checkbox" value={{ ekranBoyu
                                    }} aria-label="...">
                                {{ ekranBoyu|title }}
                            </li>
                            {% endfor %}


                        </ul>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">Disk Boyutu</p>
                            </li>

                            {% for diskBoyutu in diskBoyutus %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="diskBoyutu" type="checkbox"
                                    value="{{ diskBoyutu }}" aria-label="...">
                                {{ diskBoyutu|title }}
                            </li>
                            {% endfor %}


                        </ul>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">Model Adı</p>
                            </li>

                            {% for modelAdi in modelAdis %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="modelAdi" type="checkbox"
                                    value="{{ modelAdi }}" aria-label="...">
                                {{ modelAdi|title }}
                            </li>
                            {% endfor %}


                        </ul>
                    </div>

                </form>


            </div>

            <!-- categoriens end -->

            <div class="col-sm-10">

                <div class="row mb-2">

                    <div class="col-sm-4 border rounded-pill ">
                        <center>
                            <i class="fa fa-usd" aria-hidden="true" style="color:green"></i>
                            <i class="fa fa-arrow-up" aria-hidden="true" style="color:green"></i>
                            <a href="{% url 'SortprodDesc' %}" style="color: black">
                                En Yüksek Fiyat
                            </a>
                        </center>
                    </div>
                    <div class="col-sm-4 border rounded-pill">
                        <center>
                            <i class="fa fa-usd" aria-hidden="true" style="color:green"></i>
                            <i class="fa fa-arrow-down" aria-hidden="true" style="color:red"></i>
                            <a href="{% url 'SortprodAsc' %}" style="color: black">
                                En Düşük Fiyat
                            </a>
                        </center>
                    </div>
                    <div class="col-sm-4 border rounded-pill">
                        <center>
                            <i class="fa fa-star" aria-hidden="true" style="color: yellow"></i>
                            <a href="{% url 'SortprodStar' %}" style="color: black">
                                En Yüksek Puan
                            </a>
                        </center>
                    </div>

                </div>

                <div class="row mb-2">


                    {% for p in prods%}

                    {% include 'ecommerce/partials/_pc.html' %}

                    {% endfor %}

                </div>


                {% include 'ecommerce/partials/_pagination.html' %}
            </div>
        </div>
    </div>
</main>

{% endblock%}

from django.contrib import admin
from .models import Prods

class WebAdmin(admin.ModelAdmin):
    
    list_display= ("marka","modelAdi","modelNo","isletimSistemi","islemciTipi","islemciNesli","ram","diskBoyutu","diskTuru","ekranBoyu","puani","fiyat","site","prodLink","imageLink","prodTitle")
    list_editable= ("puani","fiyat")
    search_fields = ("marka","modelAdi","modelNo","isletimSistemi","islemciTipi","islemciNesli","ram","diskBoyutu","diskTuru","ekranBoyu","puani","fiyat","site","prodLink","imageLink","prodTitle")
    readonly_fields = ("marka","modelAdi","modelNo","isletimSistemi","islemciTipi","islemciNesli","ram","diskBoyutu","diskTuru","ekranBoyu","site","prodLink","imageLink","prodTitle")



admin.site.register(Prods,WebAdmin)



    # marka = models.CharField(max_length = 200)
    # modelAdi = models.CharField(max_length = 100)
    # modelNo = models.CharField(max_length = 50)
    # isletimSistemi = models.CharField(max_length = 100)
    # islemciTipi = models.CharField(max_length = 100)
    # islemciNesli = models.CharField(max_length = 100)
    # ram = models.CharField(max_length = 100)
    # diskBoyutu  = models.CharField(max_length = 100)
    # diskTuru = models.CharField(max_length = 100)
    # ekranBoyu = models.CharField(max_length = 100)
    # puani = models.CharField(max_length = 100)
    # fiyat = models.CharField(max_length = 100)
    # site = models.CharField(max_length = 30) 
    # prodLink=models.CharField(max_length = 200) 
    # imageLink=models.CharField(max_length = 200) 
    # prodTitle=models.CharField(max_length = 200) 


from django.apps import AppConfig


class EcommerceConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'ecommerce'

from django.db import models

class Prods(models.Model):
    # burası bizim tablomuzun oldugu yer
    marka = models.CharField(max_length = 200)
    modelAdi = models.CharField(max_length = 100)
    modelNo = models.CharField(max_length = 50)
    isletimSistemi = models.CharField(max_length = 100)
    islemciTipi = models.CharField(max_length = 100)
    islemciNesli = models.CharField(max_length = 100)
    ram = models.CharField(max_length = 100)
    diskBoyutu  = models.CharField(max_length = 100)
    diskTuru = models.CharField(max_length = 100)
    ekranBoyu = models.CharField(max_length = 100)
    puani = models.CharField(max_length = 100)
    fiyat = models.CharField(max_length = 100)
    site = models.CharField(max_length = 30) 
    prodLink=models.CharField(max_length = 200) 
    imageLink=models.CharField(max_length = 200) 
    prodTitle=models.CharField(max_length = 200) 
    
    def __str__(self):
        
        return f"{self.prodTitle}"


class MatchProducts(models.Model):
    # burası bizim tablomuzun oldugu yer
    marka = models.CharField(max_length = 50)
    modelAdi = models.CharField(max_length = 50)
    modelNo = models.CharField(max_length = 50)
    isletimSistemi = models.CharField(max_length = 50)
    islemciTipi = models.CharField(max_length = 50)
    islemciNesli = models.CharField(max_length = 50)
    ram = models.CharField(max_length = 50)
    diskBoyutu = models.CharField(max_length = 50)
    diskTuru = models.CharField(max_length = 50)
    ekranBoyu = models.CharField(max_length = 50)
    puani = models.CharField(max_length = 5)
    fiyat = models.DecimalField(max_digits=8, decimal_places=2)
    prodLink = models.CharField(max_length = 300)
    prodImageLink = models.CharField(max_length = 300)
    prodTitle = models.CharField(max_length = 300)
    site = models.CharField(max_length = 50)
    prodId=models.SmallIntegerField(null=True,blank=True,default=None)
    puani2 = models.CharField(max_length = 5,null=True,blank=True,default=None)
    fiyat2 = models.DecimalField(max_digits=8, decimal_places=2,null=True,blank=True,default=None)
    prodLink2 = models.CharField(max_length = 300,null=True,blank=True,default=None)
    site2 = models.CharField(max_length = 50,null=True,blank=True,default=None)
    puani3 = models.CharField(max_length = 5,null=True,blank=True,default=None)
    fiyat3 = models.DecimalField(max_digits=8, decimal_places=2,null=True,blank=True,default=None)
    prodLink3 = models.CharField(max_length = 300,null=True,blank=True,default=None)
    site3 = models.CharField(max_length = 50,null=True,blank=True,default=None)
    puani4 = models.CharField(max_length = 5,null=True,blank=True,default=None)
    fiyat4 = models.DecimalField(max_digits=8, decimal_places=2,null=True,blank=True,default=None)
    prodLink4 = models.CharField(max_length = 300,null=True,blank=True,default=None)
    site4 = models.CharField(max_length = 50,null=True,blank=True,default=None)
    puani5 = models.CharField(max_length = 5,null=True,blank=True,default=None)
    fiyat5 = models.DecimalField(max_digits=8, decimal_places=2,null=True,blank=True,default=None)
    prodLink5 = models.CharField(max_length = 300,null=True,blank=True,default=None)
    site5 = models.CharField(max_length = 50,null=True,blank=True,default=None)
    puani6 = models.CharField(max_length = 5,null=True,blank=True,default=None)
    fiyat6 = models.DecimalField(max_digits=8, decimal_places=2,null=True,blank=True,default=None)
    prodLink6 = models.CharField(max_length = 300,null=True,blank=True,default=None)
    site6 = models.CharField(max_length = 50,null=True,blank=True,default=None)


from django.urls import path
from . import views

urlpatterns = [
    path("", views.homepage,name='home'),
    path("home", views.homepage),
    path("<int:id>",views.prodDetails,name='productDetails'),
    path("descsort",views.DescSortProd,name="SortprodDesc"),
    path("ascsort",views.AscSortProd,name="SortprodAsc"),
    path("starsort",views.prodStarSort,name="SortprodStar"),
    path("category", views.filterByCategory, name='filterByCategory'),
    path("search", views.filterWithSearchBar, name='filterWithSearchBar')
]


import re
from django.shortcuts import render, redirect
from .models import MatchProducts
from django.core.paginator import Paginator, PageNotAnInteger, EmptyPage
from django.core.cache import cache
import pymongo

def get_data():
    
    posts=[]
    db=None
    
    if(cache.get('products')):
        posts=cache.get('products')
        print('Redis')
    else: 
        prods=MatchProducts.objects.all()
        for prod in prods:
            posts.append(prod)
        print('sqlite')
        
        cache.set('products',posts)
    
    return posts

def asc_get_price_data():
    
    posts=[]
    db=None
    
    if(cache.get('asc_products')):
        posts=cache.get('asc_products')
        print('Redis')
    else: 
        prods=MatchProducts.objects.all().order_by('fiyat')
        for prod in prods:
            posts.append(prod)
        print('sqlite')
        
        cache.set('asc_products',posts)
    
    return posts

def desc_get_price_data():
    
    posts=[]
    db=None
    
    if(cache.get('desc_products')):
        posts=cache.get('desc_products')
        print('Redis')
    else: 
        prods=MatchProducts.objects.all().order_by('-fiyat')
        for prod in prods:
            posts.append(prod)
        print('sqlite')
        
        cache.set('desc_products',posts)
    
    return posts

def get_star_data():
    
    posts=[]
    db=None
    
    if(cache.get('stars')):
        posts=cache.get('stars')
        print('Redis')
    else: 
        prods=MatchProducts.objects.all().order_by('-puani')
        for prod in prods:
            posts.append(prod)
        print('sqlite')
        
        cache.set('stars',posts)
    
    return posts

def homepage(request):




    allProducts = get_data()

    marka = set()
    modelAdi = set()
    isletimSistemi = set()
    islemciTipi = set()
    islemciNesli = set()
    ram = set()
    diskTuru = set()
    ekranBoyu = set()
    diskBoyutu = set()


    
    # kategori filter

    for item in allProducts:
 
        if item.marka != "":
            # print('')
            # print(item.marka)
            # print(item.marka.capitalize())
            # print('')
            if item.marka == "ASUS":
                marka.add(item.marka.capitalize())
            elif item.marka == "Hp":
                marka.add(item.marka.upper())
            else:
                marka.add(item.marka)
        
        if item.modelAdi !="":
            #print(item.modelAdi)
            modelAdi.add(item.modelAdi)


        if item.isletimSistemi !="":
            # print('')
            # print(item.isletimSistemi)
            # print(item.isletimSistemi.capitalize())
            # print('')
            isletimSistemi.add(item.isletimSistemi)
        
        if item.islemciTipi != "":
            # print('')
            # print(item.islemciTipi)
            # print(item.islemciTipi.title())
            # print('')
            islemciTipi.add(item.islemciTipi)

        if item.islemciNesli != "":
            if(item.islemciNesli !='Yok'):
                islemciNesli.add(int(item.islemciNesli))
            else:
                islemciNesli.add(0)
            
        
        if item.ram != "":
            # print('')
            # print(item.ram)
            # print(item.ram.title())
            # print('')
            ram.add(item.ram)
        
        if item.diskTuru != "":
            # print('')
            # print(item.diskTuru)
            # print(item.diskTuru.title())
            # print('')
            diskTuru.add(item.diskTuru)
        
        if item.ekranBoyu != "":
            # print('')
            # print(item.ekranBoyu)
            # print(item.ekranBoyu.capitalize())
            # print('')
            ekranBoyu.add(item.ekranBoyu)
        
        if item.diskBoyutu != "":
            # print('')
            # print(item.diskBoyutu)
            # print(item.diskBoyutu.capitalize())
            # print('')
            diskBoyutu.add(item.diskBoyutu)
        
    

    # with open('Kategoriler.txt','w', encoding="utf-8") as f:

    #     for item in marka:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in islemciNesli:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in islemciTipi:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in ekranBoyu:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in diskBoyutu:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in ram:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in isletimSistemi:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in diskTuru:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in modelAdi:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')
       
    
     
   
        
        


    marka=sorted(marka)
    islemciNesli=sorted(islemciNesli)
    islemciTipi=sorted(islemciTipi)
    ekranBoyu=sorted(ekranBoyu)
    diskBoyutu=sorted(diskBoyutu)
    ram=sorted(ram)
    
    
    # print(type(Products.objects.filter(site="Teknosa")))
    # print("Set Marka uzunlugu "+str(len(marka)))
    # print("Sets Marka")
    # print(marka)

            


    # for eslesen in allProducts:

    #     print("Toplam eslesen "+ str(len(eslesen)))
    #     for i in eslesen:
    #         print(i.site)
    #     print("*"*100)
    

    print('Eslesen verilerin toplam sayısı ' + str(len(allProducts)))

    # for a in allProducts:
    #     for b in a:
    #         print(b.site)
    #     break



    posts=allProducts
    page = request.GET.get('page')
    num_of_item= 20
    paginator= Paginator(posts,num_of_item)
    PostsFinal=paginator.get_page(page)
    
    
    
    dynamicVar = {
        'prods': PostsFinal,
        'markas':marka,
        'isletimSistemis' : isletimSistemi,
        'islemciTipis' : islemciTipi,
        'islemciNeslis' : islemciNesli,
        'rams': ram,
        'diskTurus': diskTuru,
        'ekranBoyus': ekranBoyu,
        'diskBoyutus': diskBoyutu,
        'modelAdis': modelAdi    
    }
    
    return render(request,'ecommerce/home.html',dynamicVar)

def prodDetails(request,id):
    
    if(cache.get(id)):
        product=cache.get(id)   
        print('Hit the cache')
    else:
        try:
            product=MatchProducts.objects.get(id=id)
            cache.set(id,product)
            print('Hit the db')
        except:
            print('Cannot find!')
    prod={
        "prods": product
    }
    return render(request,'ecommerce/details.html',prod)
    
def DescSortProd(request):
    posts=desc_get_price_data()
    page = request.GET.get('page')
    num_of_item= 20
    paginator= Paginator(posts,num_of_item)
    PostsFinal=paginator.get_page(page)
    
    prod={'prods':PostsFinal,'paginator':paginator}
    
    return render(request,'ecommerce/home.html',prod)

def AscSortProd(request):
    posts=asc_get_price_data()
    page = request.GET.get('page')
    num_of_item= 20
    paginator= Paginator(posts,num_of_item)
    PostsFinal=paginator.get_page(page)
    
    
    
    prod={'prods':PostsFinal,'paginator':paginator}
    
    return render(request,'ecommerce/home.html',prod)


def filterByCategory(request):
    
    flag = False
    base = {}
    
    if request.method == "POST":
       
        print("Posta girdim haberin olsun")
        
        selectedMarka = request.POST.getlist('marka')
        selectedIsletimSistemi = request.POST.getlist('isletimSistemi')
        selectedIslemciTipi = request.POST.getlist('islemciTipi')
        selectedIslemciNesli = request.POST.getlist('islemciNesli')
        selectedRam = request.POST.getlist('ram')
        selectedDiskTuru = request.POST.getlist('diskTuru')
        selectedEkranBoyu = request.POST.getlist('ekranBoyu')
        selectedDiskBoyutu = request.POST.getlist('diskBoyutu')
        selectedModelAdi = request.POST.getlist('modelAdi')

        
        """
        c ={}
        c['marka']={ "$in" : ["Monster", "Asus"]}
        c['modelAdi'] = {"$in" : ["Abra"]}
        """
        if len(selectedMarka) != 0:
            flag = True
            base['marka'] = {"$in" : selectedMarka}               
        if len(selectedIsletimSistemi) != 0:
            flag = True
            base['isletimSistemi'] = {"$in" : selectedIsletimSistemi}
        if len(selectedIslemciTipi) != 0:
            flag = True
            base['islemciTipi'] = {"$in" : selectedIslemciTipi}
        if len(selectedIslemciNesli) != 0:
            flag = True
            base['islemciNesli'] = {"$in" : selectedIslemciNesli}
        if len(selectedRam) != 0:
            flag = True
            base['ram'] = {"$in" : selectedRam}
        if len(selectedDiskTuru) != 0:
            flag = True
            base['diskTuru'] = {"$in" : selectedDiskTuru}
        if len(selectedEkranBoyu) != 0:
            flag = True
            base['ekranBoyu'] = {"$in" : selectedEkranBoyu}
        if len(selectedDiskBoyutu) != 0:
            flag = True
            base['diskBoyutu'] = {"$in" : selectedDiskBoyutu}
        if len(selectedModelAdi) != 0:
            flag = True
            base['modelAdi'] = {"$in" : selectedModelAdi}
        
        

    print(base)

    if flag:
        
        
        # baglanma islemi
        myClient = pymongo.MongoClient('mongodb://abvag:abvag@localhost:27017')

        # database e gimre
        mydb = myClient['WebScraping']


        myCollection = mydb['ecommerce_matchproducts']

        allProducts = myCollection.find(base)

        allProducts = list(allProducts)


       
        print(len(allProducts))

        if len(allProducts) == 0:
            # filterdan veri gelmediyse
            print('Home gitmeliyim')
            return redirect('home')

        else:

            # start scrapping
            # trendYolAllThread = threading.Thread(target=gdwt.getTrendYolAll)
            # n11AllThread = threading.Thread(target=gdwt.getN11All)
            # cicekSepetiAllThread = threading.Thread(target=gdwt.getCicekSepetiAll)
            # hepsiBuradaAllThread = threading.Thread(target=gdwt.getHepsiBuradaAll)
            
            # trendYolAllThread.start()
            # n11AllThread.start()
            # cicekSepetiAllThread.start()
            # hepsiBuradaAllThread.start()

                        
            # trendYolAllThread.join()
            # n11AllThread.join()
            # cicekSepetiAllThread.join()
            # hepsiBuradaAllThread.join()


            


            # match data
            # for i in teknosa:
            #     # print(i)
            #     equalsProduct = []
            #     equalsProduct.append(i)

            #     for j in gdwt.trendYolAll:
            #         if j.prodTitle.lower().find(i['modelNo'].lower()) !=-1:
            #             equalsProduct.append(j)
            #             break
                
            #     for j in gdwt.n11All:

            #         # if j.modelNo!="Yok" and j.modelNo!="Belirtilmemiş" and j.modelNo!="" :
            #         #     if j.modelNo == i.modelNo:
            #         #         equalsProduct.append(j)
            #         #         break

            #         if j.prodTitle.lower().find(i['modelNo'].lower()) !=-1:
            #             equalsProduct.append(j)
            #             break
                
            #     for j in gdwt.cicekSepetiAll:
            #         if j.prodTitle.lower().find(i['modelNo'].lower()) !=-1:
            #             equalsProduct.append(j)
            #             break
                
            #     for j in gdwt.hepsiBuradaAll:
            #         if j.prodTitle.lower().find(i['modelNo'].lower()) !=-1:
            #             equalsProduct.append(j)
            #             break
                
            #     if len(equalsProduct) >=2:
            #         allProducts.append(equalsProduct)


            print('Filterdan sonra gelip de eslesen verilerin toplamı '+str(len(allProducts)))



            # kategorilerin ekranda sıralanmasıyla alakalı
            marka = set()
            isletimSistemi = set()
            islemciTipi = set()
            islemciNesli = set()
            ram = set()
            diskTuru = set()
            ekranBoyu = set()
            diskBoyutu = set()
            modelAdi = set()

            for item in allProducts:
          
                if item['marka'] != "":
                    # print('')
                    # print(item['marka'])
                    # print(item['marka'].capitalize())
                    # print('')
                    if item["marka"] == "ASUS":
                        marka.add(item["marka"].capitalize())
                    elif item["marka"] == "Hp":
                        marka.add(item["marka"].upper())
                    else:
                        marka.add(item["marka"])

                if item['isletimSistemi'] !="":
                    # print('')
                    # print(item['isletimSistemi'])
                    # print(item['isletimSistemi'].capitalize())
                    # print('')
                    isletimSistemi.add(item['isletimSistemi'])
                
                if item['islemciTipi'] != "":
                    # print('')
                    # print(item['islemciTipi'])
                    # print(item['islemciTipi'].title())
                    # print('')
                    
                    islemciTipi.add(item['islemciTipi'])

                if item['islemciNesli'] != "":
                    if(item['islemciNesli'] !='Yok'):
                        islemciNesli.add(int(item['islemciNesli']))
                    else:
                        islemciNesli.add(0)
                
                if item['ram'] != "":
                    ram.add(item['ram'])
                
                if item['diskTuru'] != "":
                    # print('')
                    # print(item['diskTuru'])
                    # print(item['diskTuru'].title())
                    # print('')
                    diskTuru.add(item['diskTuru'])
                
                if item['ekranBoyu'] != "":
                    # print('')
                    # print(item['ekranBoyu'])
                    # print(item['ekranBoyu'].capitalize())
                    # print('')
                    ekranBoyu.add(item['ekranBoyu'])
                
                if item['diskBoyutu'] != "":
                    # print('')
                    # print(item['diskBoyutu'])
                    # print(item['diskBoyutu'].capitalize())
                    # print('')
                    diskBoyutu.add(item['diskBoyutu'])

                if item['modelAdi'] != "":
                    
                    modelAdi.add(item['modelAdi'])
                
            
            marka=sorted(marka)
            islemciNesli=sorted(islemciNesli)
            islemciTipi=sorted(islemciTipi)
            ekranBoyu=sorted(ekranBoyu)
            diskBoyutu=sorted(diskBoyutu)
            ram=sorted(ram)
            
            
            # print(type(Products.objects.filter(site="Teknosa")))
            # print("Set Marka uzunlugu "+str(len(marka)))
            # print("Sets Marka")
            # print(marka)

                    


            # for eslesen in allProducts:

            #     print("Toplam eslesen "+ str(len(eslesen)))
            #     for i in eslesen:
            #         print(i.site)
            #     print("*"*100)
            

            print('Eslesen verilerin toplam sayısı ' + str(len(allProducts)))

            # for a in allProducts:
            #     for b in a:
            #         print(b.site)
            #     break
            # posts=allProducts
            # page = request.GET.get('page')
            # num_of_item= 20
            # paginator= Paginator(posts,num_of_item)
            # PostsFinal=paginator.get_page(page)
            
            dynamicVar = {
                'prods': allProducts,
                'markas':marka,
                'isletimSistemis' : isletimSistemi,
                'islemciTipis' : islemciTipi,
                'islemciNeslis' : islemciNesli,
                'rams': ram,
                'diskTurus': diskTuru,
                'ekranBoyus': ekranBoyu,
                'diskBoyutus': diskBoyutu,
                'modelAdis' : modelAdi  
            }
            #tum urunleri al dedik
            

            #render bize gelen requeste gore templatelerden dosya arıyor
            #spesifik bir yerden aramasını istedigimizden template altında dosya olusturduk
            # return render(request, "shopping/index.html", dynamicVar) 
            return render(request, "ecommerce/home.html", dynamicVar)

            

    else:
        return redirect('home')

def filterWithSearchBar(request):
    
    flag = False
    base = {}
    
    if request.method == "POST":
       
        print("Search Bar Postuna girdim haberin olsun")
        
        barValue = request.POST["searchBar"]
        barValue = str(barValue)
        print("Bardan gelen value = "+barValue)

        
        """
        c ={}
        c['marka']={ "$in" : ["Monster", "Asus"]}
        c['modelAdi'] = {"$in" : ["Abra"]}
        """
        if len(barValue) > 0:
            flag = True
        

    print(base)

    if flag:
        
        
        # baglanma islemi
        myClient = pymongo.MongoClient('mongodb://abvag:abvag@localhost:27017')

        # database e gimre
        mydb = myClient['WebScraping']


        myCollection = mydb['ecommerce_matchproducts']

        tempProduct = myCollection.find(base)
        tempProduct = list(tempProduct)
        

        
        allProducts=[]

        for item in tempProduct:

            if barValue == "Teknosa":
                allProducts.append(item)
            
            elif barValue == "Trendyol":
                if item['site2'] == "Trendyol":
                    allProducts.append(item)
                elif item['site3'] == "Trendyol":
                    allProducts.append(item)
                elif item['site4'] == "Trendyol":
                    allProducts.append(item)
                elif item['site5'] == "Trendyol":
                    allProducts.append(item)
                elif item['site6'] == "Trendyol":
                    allProducts.append(item)
            
            elif barValue == "Hepsiburada":
                if item['site2'] == "Hepsiburada":
                    allProducts.append(item)
                elif item['site3'] == "Hepsiburada":
                    allProducts.append(item)
                elif item['site4'] == "Hepsiburada":
                    allProducts.append(item)
                elif item['site5'] == "Hepsiburada":
                    allProducts.append(item)
                elif item['site6'] == "Hepsiburada":
                    allProducts.append(item)
            
            elif barValue == "n11":
                if item['site2'] == "n11":
                    allProducts.append(item)
                elif item['site3'] == "n11":
                    allProducts.append(item)
                elif item['site4'] == "n11":
                    allProducts.append(item)
                elif item['site5'] == "n11":
                    allProducts.append(item)
                elif item['site6'] == "n11":
                    allProducts.append(item)
            
            elif barValue == "ÇiçekSepeti":
                if item['site2'] == "ÇiçekSepeti":
                    allProducts.append(item)
                elif item['site3'] == "ÇiçekSepeti":
                    allProducts.append(item)
                elif item['site4'] == "ÇiçekSepeti":
                    allProducts.append(item)
                elif item['site5'] == "ÇiçekSepeti":
                    allProducts.append(item)
                elif item['site6'] == "ÇiçekSepeti":
                    allProducts.append(item)



            elif item['prodTitle'].find(barValue) !=-1:
                print('Title icinde buldum')
                allProducts.append(item)

        print("allProdycts uzunlugu "+ str(len(allProducts)))
        print(allProducts)
        if len(allProducts) == 0:
            # filterdan veri gelmediyse
            print('Home gitmeliyim')
            return redirect('home')

        else:

            # start scrapping
            # trendYolAllThread = threading.Thread(target=gdwt.getTrendYolAll)
            # n11AllThread = threading.Thread(target=gdwt.getN11All)
            # cicekSepetiAllThread = threading.Thread(target=gdwt.getCicekSepetiAll)
            # hepsiBuradaAllThread = threading.Thread(target=gdwt.getHepsiBuradaAll)
            
            # trendYolAllThread.start()
            # n11AllThread.start()
            # cicekSepetiAllThread.start()
            # hepsiBuradaAllThread.start()

                        
            # trendYolAllThread.join()
            # n11AllThread.join()
            # cicekSepetiAllThread.join()
            # hepsiBuradaAllThread.join()


           


            # match data
            # for i in teknosa:
            #     # print(i)
            #     equalsProduct = []
            #     equalsProduct.append(i)

            #     for j in gdwt.trendYolAll:
            #         if j.prodTitle.lower().find(i['modelNo'].lower()) !=-1:
            #             equalsProduct.append(j)
            #             break
                
            #     for j in gdwt.n11All:

            #         # if j.modelNo!="Yok" and j.modelNo!="Belirtilmemiş" and j.modelNo!="" :
            #         #     if j.modelNo == i.modelNo:
            #         #         equalsProduct.append(j)
            #         #         break

            #         if j.prodTitle.lower().find(i['modelNo'].lower()) !=-1:
            #             equalsProduct.append(j)
            #             break
                
            #     for j in gdwt.cicekSepetiAll:
            #         if j.prodTitle.lower().find(i['modelNo'].lower()) !=-1:
            #             equalsProduct.append(j)
            #             break
                
            #     for j in gdwt.hepsiBuradaAll:
            #         if j.prodTitle.lower().find(i['modelNo'].lower()) !=-1:
            #             equalsProduct.append(j)
            #             break
                
            #     if len(equalsProduct) >=2:
            #         allProducts.append(equalsProduct)


            print('Filterdan sonra gelip de eslesen verilerin toplamı '+str(len(allProducts)))



            # kategorilerin ekranda sıralanmasıyla alakalı
            marka = set()
            isletimSistemi = set()
            islemciTipi = set()
            islemciNesli = set()
            ram = set()
            diskTuru = set()
            ekranBoyu = set()
            diskBoyutu = set()
            modelAdi = set()

            for item in allProducts:

                if item['marka'] != "":
                    # print('')
                    # print(item['marka'])
                    # print(item['marka'].capitalize())
                    # print('')
                    if item["marka"] == "ASUS":
                        marka.add(item["marka"].capitalize())
                    elif item["marka"] == "Hp":
                        marka.add(item["marka"].upper())
                    else:
                        marka.add(item["marka"])

                if item['isletimSistemi'] !="":
                    # print('')
                    # print(item['isletimSistemi'])
                    # print(item['isletimSistemi'].capitalize())
                    # print('')
                    isletimSistemi.add(item['isletimSistemi'])
                
                if item['islemciTipi'] != "":
                    # print('')
                    # print(item['islemciTipi'])
                    # print(item['islemciTipi'].title())
                    # print('')
                    
                    islemciTipi.add(item['islemciTipi'])

                if item['islemciNesli'] != "":
                    if(item['islemciNesli'] !='Yok'):
                        islemciNesli.add(int(item['islemciNesli']))
                    else:
                        islemciNesli.add(0)
                
                if item['ram'] != "":
                    ram.add(item['ram'])
                
                if item['diskTuru'] != "":
                    # print('')
                    # print(item['diskTuru'])
                    # print(item['diskTuru'].title())
                    # print('')
                    diskTuru.add(item['diskTuru'])
                
                if item['ekranBoyu'] != "":
                    # print('')
                    # print(item['ekranBoyu'])
                    # print(item['ekranBoyu'].capitalize())
                    # print('')
                    ekranBoyu.add(item['ekranBoyu'])
                
                if item['diskBoyutu'] != "":
                    # print('')
                    # print(item['diskBoyutu'])
                    # print(item['diskBoyutu'].capitalize())
                    # print('')
                    diskBoyutu.add(item['diskBoyutu'])

                if item['modelAdi'] != "":
                    
                    modelAdi.add(item['modelAdi'])
                
            
            marka=sorted(marka)
            islemciNesli=sorted(islemciNesli)
            islemciTipi=sorted(islemciTipi)
            ekranBoyu=sorted(ekranBoyu)
            diskBoyutu=sorted(diskBoyutu)
            ram=sorted(ram)
            
            
            # print(type(Products.objects.filter(site="Teknosa")))
            # print("Set Marka uzunlugu "+str(len(marka)))
            # print("Sets Marka")
            # print(marka)

                    


            # for eslesen in allProducts:

            #     print("Toplam eslesen "+ str(len(eslesen)))
            #     for i in eslesen:
            #         print(i.site)
            #     print("*"*100)
            

            print('Eslesen verilerin toplam sayısı ' + str(len(allProducts)))

            # for a in allProducts:
            #     for b in a:
            #         print(b.site)
            #     break
            posts=allProducts
            page = request.GET.get('page')
            num_of_item= 20
            paginator= Paginator(posts,num_of_item)
            PostsFinal=paginator.get_page(page)
            
            dynamicVar = {
                'prods': PostsFinal,
                'markas':marka,
                'isletimSistemis' : isletimSistemi,
                'islemciTipis' : islemciTipi,
                'islemciNeslis' : islemciNesli,
                'rams': ram,
                'diskTurus': diskTuru,
                'ekranBoyus': ekranBoyu,
                'diskBoyutus': diskBoyutu,
                'modelAdis' : modelAdi  
            }
            #tum urunleri al dedik
            

            #render bize gelen requeste gore templatelerden dosya arıyor
            #spesifik bir yerden aramasını istedigimizden template altında dosya olusturduk
            # return render(request, "shopping/index.html", dynamicVar) 
            return render(request, "ecommerce/home.html", dynamicVar)

            

    else:
        return redirect('home')

def prodStarSort(request):
    posts=get_star_data()
    page = request.GET.get('page')
    num_of_item= 20
    paginator= Paginator(posts,num_of_item)
    PostsFinal=paginator.get_page(page)
    
    
    
    prod={'prods':PostsFinal,'paginator':paginator}
    
    return render(request,'ecommerce/home.html',prod)


"""
Django settings for EcommerceWeb project.

Generated by 'django-admin startproject' using Django 3.2.15.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@jw4nyja6ap5zl9jg6)tr-hetleumm4i-z6o(-tdee%y+1%9&t'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'authentication',
    'ecommerce',
    'crud',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient"
        },
        "TIMEOUT": 15, 
    }
}



ROOT_URLCONF = 'EcommerceWeb.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            
            BASE_DIR / "templates"
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'EcommerceWeb.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': 'WebScraping',
        'CLIENT': {
                'host': 'mongodb://abvag:abvag@localhost:27017'
            }    
    }
}



# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    BASE_DIR / "static"
]

# SMTP Konfigrasyonu

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'kocaelilaptopstore41@gmail.com'
EMAIL_HOST_PASSWORD = 'nqcleoikusdfdrqg'
EMAIL_PORT = 587
EMAIL_USE_TLS = True



# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


"""EcommerceWeb URL Configuration

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/3.2/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('ecommerce.urls')),
    path('authentication/', include('authentication.urls')),
    path('crud/', include('crud.urls'))
]


{% load static %}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="{% static 'css/bootstrap.min.css' %}">
    <link rel="stylesheet" href="{% static 'css/base.css' %}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css">

    {% block cssArea %} {% endblock %}
    <title>{% block title %}{% endblock %}</title>
</head>
<body>

    {% include 'partials/_navbar.html' %}

    {% block main %}

    {% endblock %}



    {% include 'partials/_footer.html' %}


    <script src="{% static 'js/bootstrap.min.js' %}"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"
        integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"
        integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13"
        crossorigin="anonymous"></script>
    <script src="{% static 'js/myscripts.js' %}"></script>

    <script src="{% static 'js/myScripts.js' %}"></script>

</body>
</html>

<footer class="footer" id="about">
    <div class="jumbotron">
      
            <div class="row align-items-center">
                <div class="col-lg-6 text-lg-start text-muted">
                    Taha Pek - Melih Selami Ürkmez
                </div>

                <div class="col-lg-6 text-lg-end ">
                    <a href="#" class="link-secondary text-decoration-none">Anasayfa</a>
                </div>
            </div>
    </div>
</footer>

<!-- navbar -->
<header>

    <nav class="navbar navbar-dark bg-dark navbar-expand-sm" id="main-navbar">
        <div class="container">
            <a class="navbar-brand" href="#">
                <i class="fa fa-shopping-cart" aria-hidden="true"></i>
                UcuzlukPazarı
            </a>

            <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas"
                data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="offcanvas offcanvas-end offcanvas-dark" tabindex="-1" id="offcanvasNavbar"
                aria-labelledby="offcanvasNavbarLabel">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title" id="offcanvasNavbarLabel">
                        <i class="fa fa-shopping-cart" aria-hidden="true"></i>
                        UcuzlukPazarı
                    </h5>
                    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
                        aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <ul class="navbar-nav justify-content-start flex-grow-1 pe-3">
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="page" href="{% url 'home' %}">Ana Sayfa</a>
                            <!-- url home diyerek home adı verilen url e bizi aktarır -->
                        </li>
                
                    </ul>

                    <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">
                        {%if user.is_authenticated %}
                        {%if user.is_staff %}
                        <li class="nav-item">
                            <a class="nav-link" href="{% url 'deleteProduct' %}">Ürün Sil</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="{% url 'addProduct' %}">Ürün Ekle</a>
                        </li>
                        {% endif %}
                        <li class="nav-item">
                            <a class="nav-link" href="{% url 'logout' %}">Çıkış Yap</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="">Hoşgeldin, {{user.get_full_name|title }}</a>
                        </li>
                        {% else %}
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="page" href="{% url 'login' %}">Giriş Yap</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="{% url 'register' %}">Kaydol</a>
                        </li>
                        {% endif %}
                    </ul>

                    <form class="d-flex" id="navbar-form" action="{% url 'filterWithSearchBar' %}" method="POST">
                        {% csrf_token %}
                        <div class="autocomplete">
                        <input class="form-control me-2" id="myInput" name="searchBar" type="search" placeholder="Ara" aria-label="Ara">
                        </div>
                        <button class="btn btn-outline-light ms-2" id="navbar-form-button" type="submit">Ara</button>
                    </form>
                </div>
            </div>
        </div>
    </nav>

</header>
<!-- navbar end -->

{% load static %}
<!-- static dosyaları gormesi icin -->





 <!-- main start -->
 <main>
    <div class="mt-4 mx-3">
        <div class="row mb-2">
            <div class="col-sm-4 ">
        
                <img src= "{{ product.prodImageLink }}"  alt="Ressim Bulunamadı"
                    class="pcImage img-responsive" style="width: 80%; height: 80%">
        
            </div>
        
        
            <div class="col-sm-8 ">
        
                <div class="row">
        
                    <h5>
                        

                            <!-- gidecegi yolu verdik ayriyetten parametre alıyor onu 3. olarak ekliyoruz -->
                            <!-- Dinamik veriyi yazmak icin de ic ice koseli parantezs icersinde yazıyoruz -->
                            
                                
                            {{ product.prodTitle }}
                                

                    </h5>
        
                </div>
        
                <hr>
        
                <div class="row">
        
        
                    {% if product.fiyat != "" %}
        
                    <!-- para falan yazılan yer -->
                    <div class="col-sm ">
        
                        <div class="row">
                        <p class="fw-bold text-center">{{ product.fiyat }}</p>
                        </div>
        
                        <div class="row">
                            <div class="col-sm ">
                                <center>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                </center>
                            </div>
                        </div>
        
                        <div class="row">
                            <p class="fw-bold text-center">{{ product.puani }}</p>
                        </div>
              
                    </div>
        
                    {% endif %}
        
                    {% if product.fiyat2 != "" %}
        
                    <!-- para falan yazılan yer -->
                    <div class="col-sm ">
        
                        <div class="row">
                        <p class="fw-bold text-center">{{ product.fiyat2 }}</p>
                        </div>
        
                        <div class="row">
                            <div class="col-sm ">
                                <center>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                </center>
                            </div>
                        </div>
        
                        <div class="row">
                            <p class="fw-bold text-center">{{ product.puani2 }}</p>
                        </div>
              
                    </div>
        
                    {% endif %}
        
                    {% if product.fiyat3 != "" %}
        
                    <!-- para falan yazılan yer -->
                    <div class="col-sm ">
        
                        <div class="row">
                        <p class="fw-bold text-center">{{ product.fiyat3 }}</p>
                        </div>
        
                        <div class="row">
                            <div class="col-sm ">
                                <center>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                </center>
                            </div>
                        </div>
        
                        <div class="row">
                            <p class="fw-bold text-center">{{ product.puani3 }}</p>
                        </div>
              
                    </div>
        
                    {% endif %}
        
                    {% if product.fiyat4 != "" %}
        
                    <!-- para falan yazılan yer -->
                    <div class="col-sm ">
        
                        <div class="row">
                        <p class="fw-bold text-center">{{ product.fiyat4 }}</p>
                        </div>
        
                        <div class="row">
                            <div class="col-sm ">
                                <center>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                </center>
                            </div>
                        </div>
        
                        <div class="row">
                            <p class="fw-bold text-center">{{ product.puani4 }}</p>
                        </div>
              
                    </div>
        
                    {% endif %}
        
                    {% if product.fiyat5 != "" %}
        
                    <!-- para falan yazılan yer -->
                    <div class="col-sm ">
        
                        <div class="row">
                        <p class="fw-bold text-center">{{ product.fiyat5 }}</p>
                        </div>
        
                        <div class="row">
                            <div class="col-sm ">
                                <center>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                </center>
                            </div>
                        </div>
        
                        <div class="row">
                            <p class="fw-bold text-center">{{ product.puani5 }}</p>
                        </div>
              
                    </div>
        
                    {% endif %}
        
                    {% if product.fiyat6 != "" %}
        
                    <!-- para falan yazılan yer -->
                    <div class="col-sm ">
        
                        <div class="row">
                        <p class="fw-bold text-center">{{ product.fiyat6 }}</p>
                        </div>
        
                        <div class="row">
                            <div class="col-sm ">
                                <center>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                <i class="fa fa-star starColor" aria-hidden="true"></i>
                                </center>
                            </div>
                        </div>
        
                        <div class="row">
                            <p class="fw-bold text-center">{{ product.puani6 }}</p>
                        </div>
              
                    </div>
        
                    {% endif %}
        
                </div>
        
                <hr>
        
        
        
                <div class="row">
                    {% if product.site != "" %}
                    <div class="col-sm ">
                        <a href={{ product.prodLink }}>
                            <center>
                                {% if product.site == "n11" %}
                                <img src="{% static 'shopping/img/n11.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site == "Teknosa" %}
                                <img src="{% static 'shopping/img/teknosa.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site == "ÇiçekSepeti" %}
                                <img src="{% static 'shopping/img/cicekSepeti.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site == "Trendyol" %}
                                <img src="{% static 'shopping/img/trendYol.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site == "Hepsiburada" %}
                                <img src="{% static 'shopping/img/hepsiBurada.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site == "41LaptopStore" %}
                                <img src="{% static 'shopping/img/41kocaeli.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% endif %}
                            </center>
                        </a>
                    </div>
                    {% endif %}
        
                    {% if product.site2 != "" %}
                    <div class="col-sm ">
                        <a href={{ product.prodLink2 }}>
                            <center>
                                {% if product.site2 == "n11" %}
                                <img src="{% static 'shopping/img/n11.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site2 == "Teknosa" %}
                                <img src="{% static 'shopping/img/teknosa.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site2 == "ÇiçekSepeti" %}
                                <img src="{% static 'shopping/img/cicekSepeti.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site2 == "Trendyol" %}
                                <img src="{% static 'shopping/img/trendYol.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site2 == "Hepsiburada" %}
                                <img src="{% static 'shopping/img/hepsiBurada.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site2 == "41LaptopStore" %}
                                <img src="{% static 'shopping/img/41kocaeli.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% endif %}
                            </center>
                        </a>
                    </div>
                    {% endif %}
        
                    {% if product.site3 != "" %}
                    <div class="col-sm ">
                        <a href={{ product.prodLink3 }}>
                            <center>
                                {% if product.site3 == "n11" %}
                                <img src="{% static 'shopping/img/n11.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site3 == "Teknosa" %}
                                <img src="{% static 'shopping/img/teknosa.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site3 == "ÇiçekSepeti" %}
                                <img src="{% static 'shopping/img/cicekSepeti.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site3 == "Trendyol" %}
                                <img src="{% static 'shopping/img/trendYol.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site3 == "Hepsiburada" %}
                                <img src="{% static 'shopping/img/hepsiBurada.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site3 == "41LaptopStore" %}
                                <img src="{% static 'shopping/img/41kocaeli.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% endif %}
                            </center>
                        </a>
                    </div>
                    {% endif %}
        
                    {% if product.site4 != "" %}
                    <div class="col-sm ">
                        <a href={{ product.prodLink4 }}>
                            <center>
                                {% if product.site4 == "n11" %}
                                <img src="{% static 'shopping/img/n11.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site4 == "Teknosa" %}
                                <img src="{% static 'shopping/img/teknosa.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site4 == "ÇiçekSepeti" %}
                                <img src="{% static 'shopping/img/cicekSepeti.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site4 == "Trendyol" %}
                                <img src="{% static 'shopping/img/trendYol.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site4 == "Hepsiburada" %}
                                <img src="{% static 'shopping/img/hepsiBurada.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site4 == "41LaptopStore" %}
                                <img src="{% static 'shopping/img/41kocaeli.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% endif %}
                            </center>
                        </a>
                    </div>
                    {% endif %}
        
                    {% if product.site5 != "" %}
                    <div class="col-sm ">
                        <a href={{ product.prodLink5 }}>
                            <center>
                                {% if product.site5 == "n11" %}
                                <img src="{% static 'shopping/img/n11.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site5 == "Teknosa" %}
                                <img src="{% static 'shopping/img/teknosa.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site5 == "ÇiçekSepeti" %}
                                <img src="{% static 'shopping/img/cicekSepeti.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site5 == "Trendyol" %}
                                <img src="{% static 'shopping/img/trendYol.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site5 == "Hepsiburada" %}
                                <img src="{% static 'shopping/img/hepsiBurada.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site5 == "41LaptopStore" %}
                                <img src="{% static 'shopping/img/41kocaeli.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% endif %}
                            </center>
                        </a>
                    </div>
                    {% endif %}
        
                    {% if product.site6 != "" %}
                    <div class="col-sm ">
                        <a href={{ product.prodLink6 }}>
                            <center>
                                {% if product.site6 == "n11" %}
                                <img src="{% static 'shopping/img/n11.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site6 == "Teknosa" %}
                                <img src="{% static 'shopping/img/teknosa.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site6 == "ÇiçekSepeti" %}
                                <img src="{% static 'shopping/img/cicekSepeti.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site6 == "Trendyol" %}
                                <img src="{% static 'shopping/img/trendYol.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site6 == "Hepsiburada" %}
                                <img src="{% static 'shopping/img/hepsiBurada.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% elif product.site6 == "41LaptopStore" %}
                                <img src="{% static 'shopping/img/41kocaeli.png' %}" alt="Ressim Bulunamadı" style="width: 80%; height: 80%">
                                {% endif %}
                            </center>
                        </a>
                    </div>
                    {% endif %}
                </div>
        
        
            </div>
        
        
        
        
        </div>

        <h1 class="display-6 mx-3 my-3   ">Ürün Özellikleri</h1>

        <table class="my-3">

            <div class="row  mx-3 mb-2">
                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            Marka
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{ product.marka }}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>

                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            İşlemci Tipi
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{ product.islemciTipi }}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>

            </div>

            <div class="row  mx-3 mb-2">
                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            Ram
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{ product.ram }}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>

                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            İşlemci Nesli
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{ product.islemciNesli }}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>
            </div>

            <div class="row  mx-3 mb-2">
                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            Ekran Boyutu
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{ product.ekranBoyu }}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>

                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            Disk Boyutu
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{ product.diskBoyutu }}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>
            </div>

            <div class="row  mx-3 mb-2">
                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            Model Adı
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{ product.modelAdi }}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>

                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            Model Numarası
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{ product.modelNo }}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>
            </div>

            <div class="row  mx-3 mb-2">
                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            İşletim Sistemi
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{ product.isletimSistemi }}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>

                <div class="col-sm   mx-3">
                    <div class="row">
                        <div class="col-sm">
                            Disk Türü
                        </div>
                        <div class="col-sm text-end fw-bold">
                            {{ product.diskTuru }}
                        </div>
                    </div>
                    <hr class="sCol">
                </div>
            </div>

        </table>
    </div>

</main>
<!-- main end -->


{% load static %}
<!-- static dosyaları gormesi icin -->


<div class="row mb-2">
    <div class="col-sm-4 ">

        <img src= "{{ product.prodImageLink }}"  alt="Ressim Bulunamadı"
            class="pcImage img-responsive" style="width: 80%; height: 80%">

    </div>


    <div class="col-sm-8 ">

        <div class="row">

            <h5>
                
                
                <a href="{% url 'productDetails' product.id %}" class="link-dark">
                
                
                
                    <!-- gidecegi yolu verdik ayriyetten parametre alıyor onu 3. olarak ekliyoruz -->
                    <!-- Dinamik veriyi yazmak icin de ic ice koseli parantezs icersinde yazıyoruz -->
                    
                        
                    {{ product.prodTitle }}
                        
                    
                    
                </a>
            </h5>

        </div>

        <hr>

        <div class="row">


            {% if product.fiyat != "" %}

            <!-- para falan yazılan yer -->
            <div class="col-sm ">

                <div class="row">
                <p class="fw-bold text-center">{{ product.fiyat }}</p>
                </div>

                <div class="row">
                    <div class="col-sm ">
                        <center>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        </center>
                    </div>
                </div>

                <div class="row">
                    <p class="fw-bold text-center">{{ product.puani }}</p>
                </div>
      
            </div>

            {% endif %}

            {% if product.fiyat2 != "" %}

            <!-- para falan yazılan yer -->
            <div class="col-sm ">

                <div class="row">
                <p class="fw-bold text-center">{{ product.fiyat2 }}</p>
                </div>

                <div class="row">
                    <div class="col-sm ">
                        <center>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        </center>
                    </div>
                </div>

                <div class="row">
                    <p class="fw-bold text-center">{{ product.puani2 }}</p>
                </div>
      
            </div>

            {% endif %}

            {% if product.fiyat3 != "" %}

            <!-- para falan yazılan yer -->
            <div class="col-sm ">

                <div class="row">
                <p class="fw-bold text-center">{{ product.fiyat3 }}</p>
                </div>

                <div class="row">
                    <div class="col-sm ">
                        <center>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        </center>
                    </div>
                </div>

                <div class="row">
                    <p class="fw-bold text-center">{{ product.puani3 }}</p>
                </div>
      
            </div>

            {% endif %}

            {% if product.fiyat4 != "" %}

            <!-- para falan yazılan yer -->
            <div class="col-sm ">

                <div class="row">
                <p class="fw-bold text-center">{{ product.fiyat4 }}</p>
                </div>

                <div class="row">
                    <div class="col-sm ">
                        <center>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        </center>
                    </div>
                </div>

                <div class="row">
                    <p class="fw-bold text-center">{{ product.puani4 }}</p>
                </div>
      
            </div>

            {% endif %}

            {% if product.fiyat5 != "" %}

            <!-- para falan yazılan yer -->
            <div class="col-sm ">

                <div class="row">
                <p class="fw-bold text-center">{{ product.fiyat5 }}</p>
                </div>

                <div class="row">
                    <div class="col-sm ">
                        <center>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        </center>
                    </div>
                </div>

                <div class="row">
                    <p class="fw-bold text-center">{{ product.puani5 }}</p>
                </div>
      
            </div>

            {% endif %}

            {% if product.fiyat6 != "" %}

            <!-- para falan yazılan yer -->
            <div class="col-sm ">

                <div class="row">
                <p class="fw-bold text-center">{{ product.fiyat6 }}</p>
                </div>

                <div class="row">
                    <div class="col-sm ">
                        <center>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        <i class="fa fa-star starColor" aria-hidden="true"></i>
                        </center>
                    </div>
                </div>

                <div class="row">
                    <p class="fw-bold text-center">{{ product.puani6 }}</p>
                </div>
      
            </div>

            {% endif %}

        </div>

        <hr>



        <div class="row">
            {% if product.site != "" %}
            <div class="col-sm ">
                <a href={{ product.prodLink }}>
                    <center>
                        {% if product.site == "n11" %}
                        <img src="{% static 'shopping/img/n11.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site == "Teknosa" %}
                        <img src="{% static 'shopping/img/teknosa.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site == "ÇiçekSepeti" %}
                        <img src="{% static 'shopping/img/cicekSepeti.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site == "Trendyol" %}
                        <img src="{% static 'shopping/img/trendYol.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site == "Hepsiburada" %}
                        <img src="{% static 'shopping/img/hepsiBurada.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site == "41LaptopStore" %}
                        <img src="{% static 'shopping/img/41kocaeli.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% endif %}
                    </center>
                </a>
            </div>
            {% endif %}

            {% if product.site2 != "" %}
            <div class="col-sm ">
                <a href={{ product.prodLink2 }}>
                    <center>
                        {% if product.site2 == "n11" %}
                        <img src="{% static 'shopping/img/n11.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site2 == "Teknosa" %}
                        <img src="{% static 'shopping/img/teknosa.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site2 == "ÇiçekSepeti" %}
                        <img src="{% static 'shopping/img/cicekSepeti.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site2 == "Trendyol" %}
                        <img src="{% static 'shopping/img/trendYol.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site2 == "Hepsiburada" %}
                        <img src="{% static 'shopping/img/hepsiBurada.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site2 == "41LaptopStore" %}
                        <img src="{% static 'shopping/img/41kocaeli.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% endif %}
                    </center>
                </a>
            </div>
            {% endif %}

            {% if product.site3 != "" %}
            <div class="col-sm ">
                <a href={{ product.prodLink3 }}>
                    <center>
                        {% if product.site3 == "n11" %}
                        <img src="{% static 'shopping/img/n11.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site3 == "Teknosa" %}
                        <img src="{% static 'shopping/img/teknosa.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site3 == "ÇiçekSepeti" %}
                        <img src="{% static 'shopping/img/cicekSepeti.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site3 == "Trendyol" %}
                        <img src="{% static 'shopping/img/trendYol.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site3 == "Hepsiburada" %}
                        <img src="{% static 'shopping/img/hepsiBurada.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site3 == "41LaptopStore" %}
                        <img src="{% static 'shopping/img/41kocaeli.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% endif %}
                    </center>
                </a>
            </div>
            {% endif %}

            {% if product.site4 != "" %}
            <div class="col-sm ">
                <a href={{ product.prodLink4 }}>
                    <center>
                        {% if product.site4 == "n11" %}
                        <img src="{% static 'shopping/img/n11.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site4 == "Teknosa" %}
                        <img src="{% static 'shopping/img/teknosa.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site4 == "ÇiçekSepeti" %}
                        <img src="{% static 'shopping/img/cicekSepeti.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site4 == "Trendyol" %}
                        <img src="{% static 'shopping/img/trendYol.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site4 == "Hepsiburada" %}
                        <img src="{% static 'shopping/img/hepsiBurada.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site4 == "41LaptopStore" %}
                        <img src="{% static 'shopping/img/41kocaeli.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% endif %}
                    </center>
                </a>
            </div>
            {% endif %}

            {% if product.site5 != "" %}
            <div class="col-sm ">
                <a href={{ product.prodLink5 }}>
                    <center>
                        {% if product.site5 == "n11" %}
                        <img src="{% static 'shopping/img/n11.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site5 == "Teknosa" %}
                        <img src="{% static 'shopping/img/teknosa.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site5 == "ÇiçekSepeti" %}
                        <img src="{% static 'shopping/img/cicekSepeti.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site5 == "Trendyol" %}
                        <img src="{% static 'shopping/img/trendYol.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site5 == "Hepsiburada" %}
                        <img src="{% static 'shopping/img/hepsiBurada.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site5 == "41LaptopStore" %}
                        <img src="{% static 'shopping/img/41kocaeli.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% endif %}
                    </center>
                </a>
            </div>
            {% endif %}

            {% if product.site6 != "" %}
            <div class="col-sm ">
                <a href={{ product.prodLink6 }}>
                    <center>
                        {% if product.site6 == "n11" %}
                        <img src="{% static 'shopping/img/n11.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site6 == "Teknosa" %}
                        <img src="{% static 'shopping/img/teknosa.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site6 == "ÇiçekSepeti" %}
                        <img src="{% static 'shopping/img/cicekSepeti.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site6 == "Trendyol" %}
                        <img src="{% static 'shopping/img/trendYol.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site6 == "Hepsiburada" %}
                        <img src="{% static 'shopping/img/hepsiBurada.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% elif product.site6 == "41LaptopStore" %}
                        <img src="{% static 'shopping/img/41kocaeli.png' %}" alt="Ressim Bulunamadı"style="width: 80%; height: 80%">
                        {% endif %}
                    </center>
                </a>
            </div>
            {% endif %}
        </div>


    </div>




</div>


{% extends "base.html" %}
<!-- bu sekilde basemizi dahil ediyoruz -->

{% load static %}
<!-- static dosyaları gormesi icin -->

{% block cssArea %}
<link rel="stylesheet" href="{% static 'shopping/css/style.css' %}"> {% endblock %}

{% block title %} Ana Sayfa {% endblock %}

<!-- bu sekilde base de ilgili yere spesifik html ekledik -->
{% block main %}


<!-- main start  -->
<main>
    <div class="mt-4 mx-3">
        <div class="row">



            <!-- categories start -->


            <div class="col-sm-3">
                <form action="{% url 'filterByCategory' %}" method="POST">
                    {% csrf_token %}
                    <div class="row mb-4">
                        <center>
                        <button type="submit" class="btn btn-outline-light" id="uygula"
                            style="background-color: orange;">Uygula</button>
                        </center>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">Marka</p>
                            </li>

                            {% for marka in markas %}
                            <li class="list-group-item a">
                                <input class="form-check-input me-1" name="marka" type="checkbox" value={{ marka }} aria-label="...">
                                {{ marka|title }}
                            </li>
                            {% endfor %}

                        </ul>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">İsletim Sistemi</p>
                            </li>

                            {% for isletimSistemi in isletimSistemis %}         
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="isletimSistemi" type="checkbox" value="{{isletimSistemi}}" aria-label="...">
                                {{ isletimSistemi|title }}
                            </li>
                            {% endfor %}

                        </ul>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">İslemci Tipi</p>
                            </li>
                            
                            {% for islemciTipi in islemciTipis %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="islemciTipi" type="checkbox" value="{{ islemciTipi }}" aria-label="...">
                                {{ islemciTipi|title }}
                            </li>
                            {% endfor %}

                        </ul>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">İslemci Nesli</p>
                            </li>

                            {% for islemciNesli in islemciNeslis %}
                            {% if islemciNesli == 0 %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="islemciNesli" type="checkbox" value="Yok" aria-label="...">
                                Yok
                            </li>
                            {% else %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="islemciNesli" type="checkbox" value="{{ islemciNesli }}" aria-label="...">
                                {{ islemciNesli }} 
                            </li>
                            {% endif %}
                            {% endfor %}

                            
                        </ul>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">Ram</p>
                            </li>
                            
                            {% for ram in rams %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="ram" type="checkbox" value="{{ ram }}" aria-label="...">
                                {{ ram|title }}
                            </li>
                            {% endfor %}

                            
                        </ul>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">Disk Turu</p>
                            </li>
                            
                            {% for diskTuru in diskTurus %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="diskTuru" type="checkbox" value={{ diskTuru }} aria-label="...">
                                {{ diskTuru|title }}
                            </li>
                            {% endfor %}

                            
                        </ul>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">Ekran Boyu</p>
                            </li>
                            
                            {% for ekranBoyu in ekranBoyus %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="ekranBoyu" type="checkbox" value={{ ekranBoyu }} aria-label="...">
                                {{ ekranBoyu|title }}
                            </li>
                            {% endfor %}

                            
                        </ul>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">Disk Boyutu</p>
                            </li>
                            
                            {% for diskBoyutu in diskBoyutus %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="diskBoyutu" type="checkbox" value="{{ diskBoyutu }}" aria-label="...">
                                {{ diskBoyutu|title }} 
                            </li>
                            {% endfor %}

                            
                        </ul>
                    </div>

                    <div class="row mb-4">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <p class="fw-bold">Model Adı</p>
                            </li>
                            
                            {% for modelAdi in modelAdis %}
                            <li class="list-group-item">
                                <input class="form-check-input me-1" name="modelAdi" type="checkbox" value="{{ modelAdi }}" aria-label="...">
                                {{ modelAdi|title }} 
                            </li>
                            {% endfor %}

                            
                        </ul>
                    </div>

                </form>


            </div>

            <!-- categoriens end -->

            <!-- products start -->

            <div class="col-sm-9">

                <!-- stats start -->
                <div class="row myPaddingForSpecialRow mb-2">

                    <div class="col-sm-4 border rounded-pill ">
                        <center>
                            <a href="{% url 'descsortprod' %}">
                            <i class="fa fa-usd" aria-hidden="true" style="color:green"></i>
                            <i class="fa fa-arrow-up" aria-hidden="true" style="color:green"></i>
                            En Yüksek Fiyat
                            </a>
                        </center>
                    </div>
                    <div class="col-sm-4 border rounded-pill">
                        <center>
                            <a href="{% url 'ascsortprod' %}">
                            <i class="fa fa-usd" aria-hidden="true" style="color:green"></i>
                            <i class="fa fa-arrow-down" aria-hidden="true" style="color:red"></i>
                            En Düşük Fiyat
                        </a>
                        </center>
                    </div>
                    <div class="col-sm-4 border rounded-pill">
                        <center>
                            <a href="{% url 'descstarprod' %}">
                            <i class="fa fa-star" aria-hidden="true" style="color:yellow"></i>
                            En Yüksek Puan
                            </a>
                        </center>
                    </div>

                </div>
                <!-- stats end -->


                <!-- laptop start -->


                <!-- include partial ile uygulama yonetşmşnş kolaylaştırıyoruz
                    pc leri ditek frame part altından çekiyoruz -->



                {% for product in products %}
                {% include 'shopping/framePart/pc.html' %}

                <hr>
                {% endfor %}

                <!-- her product direkt shopping framePart pc.html icersinde yollanır bilgiler -->

                <!-- laptop ends -->



                <!-- pagination split -->
                <div class="container">

                    <nav aria-label="Page navigation example">
                        <div class="text-center">
                        <ul class="pagination justify-content-end" style="margin-right:750px;" ">
                          {% if products.has_previous %}
                          <li class="page-item">
                            <a class="page-link" href="?page=1">First</a>
                          </li>
                          <li class="page-item">
                            <a class="page-link" href="?page={{products.previous_page_number}}">Previous</a>
                          </li>
                          {% endif %}
                          <li class="page-item"><a class="page-link" href="?page=1">1</a></li>
                          <li class="page-item"><a class="page-link" href="?page=2">2</a></li>
                          <li class="page-item"><a class="page-link" href="?page=3">3</a></li>
                          {% if products.has_next%}
                          <li class="page-item">
                            <a class="page-link" href="?page={{products.next_page_number}}">Next</a>
                          </li>
                          {% endif %}
                        </ul>
                    </div>
                      </nav> 

                </div>
                <!-- paginaton split end -->

            </div>

            <!-- product end -->

        </div>

</main>
<!-- main stop  -->

{% endblock %}


{% extends "base.html" %}
<!-- bu sekilde basemizi dahil ediyoruz -->

{% load static %}
<!-- static dosyaları gormesi icin -->

{% block title %} Ürün Detayları {% endblock %}

<!-- bu sekilde base de ilgili yere spesifik html ekledik -->
{% block main %}

    
    {% include 'shopping/framePart/details.html' %}
    
    
{% endblock %}

from django.contrib import admin
from .models import Products, MatchProducts
# Register your models here.
# admin uygulamasında gostertiyoruz


class ProductAdmin(admin.ModelAdmin):

    # neler gosterilecek
    list_display = ("marka", "modelAdi", "modelNo", "prodTitle", "fiyat", "site")

    search_fields = ("marka", "modelNo", "modelAdi", "site")

# gosterecegiz
admin.site.register(Products, ProductAdmin)

admin.site.register(MatchProducts,ProductAdmin)


from django.apps import AppConfig


class ShoppingConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'shopping'

from django.db import models

# Create your models here.

# Buraya Modellerimizi yüklüyoruz
# Ben bir deneme modeli yükleyeceğim


"""

'marka':marka,+
'modelAdi':model_adi, +
'modelNo':model_no, +
'isletimSistemi':isletimsistemi,+
'islemciTipi':islemci_tipi,+
'islemciNesli':islemcinesli,+
'ram':ram,+
'diskBoyutu':kapasite,+
'diskTuru':disk_tipi,+
'ekranBoyu':ekran_boyutu,+
'puani':puani,+
'fiyat':fiyat,+
'prodLink':url,+
'imageLink':imageLink,+
'prodTitle':prodTitle,+
'site':site+

"""

class Products(models.Model):
    # burası bizim tablomuzun oldugu yer
    marka = models.CharField(max_length = 50)
    modelAdi = models.CharField(max_length = 50)
    modelNo = models.CharField(max_length = 50)
    isletimSistemi = models.CharField(max_length = 50)
    islemciTipi = models.CharField(max_length = 50)
    islemciNesli = models.CharField(max_length = 50)
    ram = models.CharField(max_length = 50)
    diskBoyutu = models.CharField(max_length = 50)
    diskTuru = models.CharField(max_length = 50)
    ekranBoyu = models.CharField(max_length = 50)
    puani = models.CharField(max_length = 5)
    fiyat = models.DecimalField(max_digits=8, decimal_places=2)
    prodLink = models.CharField(max_length = 300)
    imageLink = models.CharField(max_length = 300)
    prodTitle = models.CharField(max_length = 300)
    site = models.CharField(max_length = 50)


class MatchProducts(models.Model):
    # burası bizim tablomuzun oldugu yer
    marka = models.CharField(max_length = 50)
    modelAdi = models.CharField(max_length = 50)
    modelNo = models.CharField(max_length = 50)
    isletimSistemi = models.CharField(max_length = 50)
    islemciTipi = models.CharField(max_length = 50)
    islemciNesli = models.CharField(max_length = 50)
    ram = models.CharField(max_length = 50)
    diskBoyutu = models.CharField(max_length = 50)
    diskTuru = models.CharField(max_length = 50)
    ekranBoyu = models.CharField(max_length = 50)
    puani = models.CharField(max_length = 5)
    fiyat = models.DecimalField(max_digits=8, decimal_places=2)
    prodLink = models.CharField(max_length = 300)
    prodImageLink = models.CharField(max_length = 300)
    prodTitle = models.CharField(max_length = 300)
    site = models.CharField(max_length = 50)
    prodId=models.SmallIntegerField(null=True,blank=True,default=None)
    puani2 = models.CharField(max_length = 5,null=True,blank=True,default=None)
    fiyat2 = models.DecimalField(max_digits=8, decimal_places=2,null=True,blank=True,default=None)
    prodLink2 = models.CharField(max_length = 300,null=True,blank=True,default=None)
    site2 = models.CharField(max_length = 50,null=True,blank=True,default=None)
    puani3 = models.CharField(max_length = 5,null=True,blank=True,default=None)
    fiyat3 = models.DecimalField(max_digits=8, decimal_places=2,null=True,blank=True,default=None)
    prodLink3 = models.CharField(max_length = 300,null=True,blank=True,default=None)
    site3 = models.CharField(max_length = 50,null=True,blank=True,default=None)
    puani4 = models.CharField(max_length = 5,null=True,blank=True,default=None)
    fiyat4 = models.DecimalField(max_digits=8, decimal_places=2,null=True,blank=True,default=None)
    prodLink4 = models.CharField(max_length = 300,null=True,blank=True,default=None)
    site4 = models.CharField(max_length = 50,null=True,blank=True,default=None)
    puani5 = models.CharField(max_length = 5,null=True,blank=True,default=None)
    fiyat5 = models.DecimalField(max_digits=8, decimal_places=2,null=True,blank=True,default=None)
    prodLink5 = models.CharField(max_length = 300,null=True,blank=True,default=None)
    site5 = models.CharField(max_length = 50,null=True,blank=True,default=None)
    puani6 = models.CharField(max_length = 5,null=True,blank=True,default=None)
    fiyat6 = models.DecimalField(max_digits=8, decimal_places=2,null=True,blank=True,default=None)
    prodLink6 = models.CharField(max_length = 300,null=True,blank=True,default=None)
    site6 = models.CharField(max_length = 50,null=True,blank=True,default=None)

    

    

from django.urls import path
# path gostermemizi saglayan kutuphabe
from . import views


# urlpatterns icine uygulanamanın yonlenecegi url leri belirtiriz
urlpatterns = [
    path("", views.home, name='home'),
    path("<int:id>", views.productDetails, name='productDetails'),# detail da simdilik her pc ozgu id gelsin olarak dusunelim
    path("ascsort",views.AscSortProd,name="ascsortprod"),
    path("descsort",views.DescSortProd,name="descsortprod"),
    path("descstarsort",views.DescStarProd,name="descstarprod"),
    path("category", views.filterByCategory, name='filterByCategory'),
    path("search", views.filterWithSearchBar, name='filterWithSearchBar')
]

from django.http import HttpResponse
from django.shortcuts import redirect, render
from .models import Products, MatchProducts
import pymongo 
from pymongo import MongoClient
import threading
import random
from django.core.paginator import Paginator, PageNotAnInteger, EmptyPage
# tablodaki verileri cekip canlıya atmak icin

# Create your views here.
# burada beliritilen linklerde neler gozukecegini soyleriz
class Database:
    
    client=MongoClient('mongodb://{0}:{0}@localhost:27017'.format('abvag','abvag'))
    db=client["WebScraping"]
    mycol=db["shopping_matchproducts"]
    
    def __init__(self) -> None:     
        pass
    
    def add_dict_product(self,prod_dict):
        self.mycol.insert_many(prod_dict)
        
    def add_one_product(self,dict):
        self.mycol.insert_one(dict)
        
    def control_add_product(self,prod_dict):
        
        prod= self.mycol.find()
        if(prod==None):
            
            self.add_dict_product(prod_dict)
            
        else:
            for p in prod_dict:
                    
                    for a in prod:
                        
                        if(a['prodLink']==p['prodLink']):
                            
                            self.delete_product(a)
                            break
               
                    self.add_one_product(p)
                  
    def delete_product(self,dict):
        
        self.mycol.delete_one(dict)
            
    def delete_col(self):
        
        self.mycol.delete_many({})

class Database2:
    
    client=MongoClient('mongodb://{0}:{0}@localhost:27017'.format('abvag','abvag'))
    db=client["WebScraping"]
    mycol=db["ecommerce_matchproducts"]
    
    def __init__(self) -> None:     
        pass
    
    def add_dict_product(self,prod_dict):
        self.mycol.insert_many(prod_dict)
        
    def add_one_product(self,dict):
        self.mycol.insert_one(dict)
        
    def control_add_product(self,prod_dict):
        
        prod= self.mycol.find()
        if(prod==None):
            
            self.add_dict_product(prod_dict)
            
        else:
            for p in prod_dict:
                    
                    for a in prod:
                        
                        if(a['prodLink']==p['prodLink']):
                            
                            self.delete_product(a)
                            break
               
                    self.add_one_product(p)
                  
    def delete_product(self,dict):
        
        self.mycol.delete_one(dict)
            
    def delete_col(self):
        
        self.mycol.delete_many({})  



class GetDatasWithThread:

    teknosaAll=[]
    trendYolAll=[]
    n11All=[]
    cicekSepetiAll=[]
    hepsiBuradaAll=[]
    laptop41storeAll=[]

    def __init__(self) -> None:
        pass
    
    def getLaptop41StoreAll(self):
        
        self.laptop41storeAll = Products.objects.filter(site="41LaptopStore")


    def getTeknosaAll(self):
        #print('Teknosa cekerim')
        self.teknosaAll = Products.objects.filter(site="Teknosa")

    def getTrendYolAll(self):
        #print('Trendyol cekerim')
        self.trendYolAll = Products.objects.filter(site="Trendyol")

    def getN11All(self):
        #print('N11 cekerim')
        self.n11All = Products.objects.filter(site="n11")
   
    def getCicekSepetiAll(self):
        #print('Cicek cekerim')
        self.cicekSepetiAll = Products.objects.filter(site="ÇiçekSepeti")
        
    def getHepsiBuradaAll(self):
        #print('Hepsi cekerim')
        self.hepsiBuradaAll = Products.objects.filter(site="Hepsiburada")
    
    def AgetTeknosaAll(self):
        print('Teknosa cekerim')
        self.teknosaAll = Products.objects.filter(site="Teknosa").order_by('fiyat')

    def AgetTrendYolAll(self):
        print('Trendyol cekerim')
        self.trendYolAll = Products.objects.filter(site="Trendyol").order_by('fiyat')

    def AgetN11All(self):
        print('N11 cekerim')
        self.n11All = Products.objects.filter(site="n11").order_by('fiyat')
        
    def AgetCicekSepetiAll(self):
        print('Cicek cekerim')
        self.cicekSepetiAll = Products.objects.filter(site="ÇiçekSepeti").order_by('fiyat')
            
    def AgetHepsiBuradaAll(self):
        print('Hepsi cekerim')
        self.hepsiBuradaAll = Products.objects.filter(site="Hepsiburada")
    
    def AgetTeknosaAll(self):
        print('Teknosa cekerim')
        self.teknosaAll = Products.objects.filter(site="Teknosa").order_by('fiyat')

    def AgetTrendYolAll(self):
        print('Trendyol cekerim')
        self.trendYolAll = Products.objects.filter(site="Trendyol").order_by('fiyat')

    def AgetN11All(self):
        print('N11 cekerim')
        self.n11All = Products.objects.filter(site="n11").order_by('fiyat')
        
    def AgetCicekSepetiAll(self):
        print('Cicek cekerim')
        self.cicekSepetiAll = Products.objects.filter(site="ÇiçekSepeti").order_by('fiyat')
            
    def AgetHepsiBuradaAll(self):
        print('Hepsi cekerim')
        self.hepsiBuradaAll = Products.objects.filter(site="Hepsiburada").order_by('fiyat')
    
    def DgetTeknosaAll(self):
        print('Teknosa cekerim')
        self.teknosaAll = Products.objects.filter(site="Teknosa").order_by('-fiyat')

    def DgetTrendYolAll(self):
        print('Trendyol cekerim')
        self.trendYolAll = Products.objects.filter(site="Trendyol").order_by('-fiyat')

    def DgetN11All(self):
        print('N11 cekerim')
        self.n11All = Products.objects.filter(site="n11").order_by('-fiyat')
        
    def DgetCicekSepetiAll(self):
        print('Cicek cekerim')
        self.cicekSepetiAll = Products.objects.filter(site="ÇiçekSepeti").order_by('-fiyat')
       
    def DgetHepsiBuradaAll(self):
        print('Hepsi cekerim')
        self.hepsiBuradaAll = Products.objects.filter(site="Hepsiburada").order_by('-fiyat')
    
    def SDgetTeknosaAll(self):
        print('Teknosa cekerim')
        self.teknosaAll = Products.objects.filter(site="Teknosa").order_by('-puani')

    def SDgetTrendYolAll(self):
        print('Trendyol cekerim')
        self.trendYolAll = Products.objects.filter(site="Trendyol").order_by('-puani')

    def SDgetN11All(self):
        print('N11 cekerim')
        self.n11All = Products.objects.filter(site="n11").order_by('-puani')
        
    def SDgetCicekSepetiAll(self):
        print('Cicek cekerim')
        self.cicekSepetiAll = Products.objects.filter(site="ÇiçekSepeti").order_by('-puani')
       
    def SDgetHepsiBuradaAll(self):
        print('Hepsi cekerim')
        self.hepsiBuradaAll = Products.objects.filter(site="Hepsiburada").order_by('-puani')

def home(request):
    gdwt = GetDatasWithThread()
            
    
    # client=MongoClient("mongodb://{0}:{0}@localhost:27017".format('abvag','abvag'))
    # db=client['WebScraping']
    # col=db['shopping_products']

    # prods=col.find({'puani':0})

    # for x in prods:
    #     col.update_one({'prodLink':x['prodLink']},{'$set':{'puani':round(random.uniform(3,5),2)}})

    
    
    
    # teknosaAllThread = threading.Thread(target=gdwt.getTeknosaAll)
    # trendYolAllThread = threading.Thread(target=gdwt.getTrendYolAll)
    # n11AllThread = threading.Thread(target=gdwt.getN11All)
    # cicekSepetiAllThread = threading.Thread(target=gdwt.getCicekSepetiAll)
    # hepsiBuradaAllThread = threading.Thread(target=gdwt.getHepsiBuradaAll)

    # teknosaAll = Products.objects.filter(site="Teknosa")
    # trendYolAll = Products.objects.filter(site="Trendyol")
    # n11All = Products.objects.filter(site="n11")
    # cicekSepetiAll = Products.objects.filter(site="ÇiçekSepeti")
    # hepsiBuradaAll = Products.objects.filter(site="Hepsiburada")

    
    # teknosaAllThread.start()

    # trendYolAllThread.start()
    # n11AllThread.start()
    # cicekSepetiAllThread.start()
    # hepsiBuradaAllThread.start()

    
    # teknosaAllThread.join()

    # trendYolAllThread.join()
    # n11AllThread.join()
    # cicekSepetiAllThread.join()
    # hepsiBuradaAllThread.join()


    # print("Teknosa  "+ str(len(gdwt.teknosaAll)))
    # print("Trend Yol    " + str(len(gdwt.trendYolAll)))
    # print("N11  " + str(len(gdwt.n11All)))
    # print("Cicek Sepeti     "+ str(len(gdwt.cicekSepetiAll)))
    # print("Hepsi Burda  " + str(len(gdwt.hepsiBuradaAll)))
    
    

    allProducts = MatchProducts.objects.all()

    # kategorilerin ekranda sıralanmasıyla alakalı
    # model adini ekledim
    marka = set()
    modelAdi = set()
    isletimSistemi = set()
    islemciTipi = set()
    islemciNesli = set()
    ram = set()
    diskTuru = set()
    ekranBoyu = set()
    diskBoyutu = set()


    
    # kategori filter

    for item in allProducts:
 
        if item.marka != "":
            # print('')
            # print(item.marka)
            # print(item.marka.capitalize())
            # print('')
            if item.marka == "ASUS":
                marka.add(item.marka.capitalize())
            elif item.marka == "Hp":
                marka.add(item.marka.upper())
            else:
                marka.add(item.marka)
        
        if item.modelAdi !="":
            print(item.modelAdi)
            modelAdi.add(item.modelAdi)


        if item.isletimSistemi !="":
            # print('')
            # print(item.isletimSistemi)
            # print(item.isletimSistemi.capitalize())
            # print('')
            isletimSistemi.add(item.isletimSistemi)
        
        if item.islemciTipi != "":
            # print('')
            # print(item.islemciTipi)
            # print(item.islemciTipi.title())
            # print('')
            islemciTipi.add(item.islemciTipi)

        if item.islemciNesli != "":
            if(item.islemciNesli !='Yok'):
                islemciNesli.add(int(item.islemciNesli))
            else:
                islemciNesli.add(0)
            
        
        if item.ram != "":
            # print('')
            # print(item.ram)
            # print(item.ram.title())
            # print('')
            ram.add(item.ram)
        
        if item.diskTuru != "":
            # print('')
            # print(item.diskTuru)
            # print(item.diskTuru.title())
            # print('')
            diskTuru.add(item.diskTuru)
        
        if item.ekranBoyu != "":
            # print('')
            # print(item.ekranBoyu)
            # print(item.ekranBoyu.capitalize())
            # print('')
            ekranBoyu.add(item.ekranBoyu)
        
        if item.diskBoyutu != "":
            # print('')
            # print(item.diskBoyutu)
            # print(item.diskBoyutu.capitalize())
            # print('')
            diskBoyutu.add(item.diskBoyutu)
        
    

    # with open('Kategoriler.txt','w', encoding="utf-8") as f:

    #     for item in marka:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in islemciNesli:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in islemciTipi:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in ekranBoyu:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in diskBoyutu:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in ram:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in isletimSistemi:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in diskTuru:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in modelAdi:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')
       
    
     
   
        
        


    marka=sorted(marka)
    islemciNesli=sorted(islemciNesli)
    islemciTipi=sorted(islemciTipi)
    ekranBoyu=sorted(ekranBoyu)
    diskBoyutu=sorted(diskBoyutu)
    ram=sorted(ram)
    
    
    # print(type(Products.objects.filter(site="Teknosa")))
    # print("Set Marka uzunlugu "+str(len(marka)))
    # print("Sets Marka")
    # print(marka)

            


    # for eslesen in allProducts:

    #     print("Toplam eslesen "+ str(len(eslesen)))
    #     for i in eslesen:
    #         print(i.site)
    #     print("*"*100)
    

    print('Eslesen verilerin toplam sayısı ' + str(len(allProducts)))

    # for a in allProducts:
    #     for b in a:
    #         print(b.site)
    #     break
    posts=allProducts
    page = request.GET.get('page')
    num_of_item= 20
    paginator= Paginator(posts,num_of_item)
    PostsFinal=paginator.get_page(page)
    
    dynamicVar = {
        'products': PostsFinal,
        'markas':marka,
        'isletimSistemis' : isletimSistemi,
        'islemciTipis' : islemciTipi,
        'islemciNeslis' : islemciNesli,
        'rams': ram,
        'diskTurus': diskTuru,
        'ekranBoyus': ekranBoyu,
        'diskBoyutus': diskBoyutu,
        'modelAdis': modelAdi    
    }
    #tum urunleri al dedik
    

    #render bize gelen requeste gore templatelerden dosya arıyor
    #spesifik bir yerden aramasını istedigimizden template altında dosya olusturduk
    # return render(request, "shopping/index.html", dynamicVar) 
    return render(request, "shopping/index.html", dynamicVar)

def productDetails(request, id):

    # mesela biz id yi de request gondermek istiyoruz
    # onu bir dict yapısında 3. parametre olarak gonderebilirz
    # ilgili yerde kullanımı {{ }} icersinde olur

    # simdilik id ye gore cekicem ama isin icine birden fazla gelince model no olucak
    # products = DenemeProduct.objects.filter(id = id)

    # su an tek bir veri gelse de bu veri [veri] seklinde bir dizi elemanı olarak geliyor

    product = MatchProducts.objects.get(id=id)

    print('*****************************')
    print(product.modelAdi)
    print(product.islemciTipi)
    print(product.islemciNesli)
    print(product.marka)
    print(product.site)
    print('*****************************')

    

    dynamicVar = {
        'product' : product
    }

    
    

    # dynamicVar = {
    #     'products': ""
    # }
    # return render(request, "shopping/productDetails.html", dynamicVar)
    return render(request, "shopping/productDetails.html", dynamicVar)

def filterByCategory(request):
    gdwt = GetDatasWithThread()
    flag = False
    base = {}
    
    if request.method == "POST":
       
        print("Posta girdim haberin olsun")
        
        selectedMarka = request.POST.getlist('marka')
        selectedIsletimSistemi = request.POST.getlist('isletimSistemi')
        selectedIslemciTipi = request.POST.getlist('islemciTipi')
        selectedIslemciNesli = request.POST.getlist('islemciNesli')
        selectedRam = request.POST.getlist('ram')
        selectedDiskTuru = request.POST.getlist('diskTuru')
        selectedEkranBoyu = request.POST.getlist('ekranBoyu')
        selectedDiskBoyutu = request.POST.getlist('diskBoyutu')
        selectedModelAdi = request.POST.getlist('modelAdi')

        
        """
        c ={}
        c['marka']={ "$in" : ["Monster", "Asus"]}
        c['modelAdi'] = {"$in" : ["Abra"]}
        """
        if len(selectedMarka) != 0:
            flag = True
            base['marka'] = {"$in" : selectedMarka}               
        if len(selectedIsletimSistemi) != 0:
            flag = True
            base['isletimSistemi'] = {"$in" : selectedIsletimSistemi}
        if len(selectedIslemciTipi) != 0:
            flag = True
            base['islemciTipi'] = {"$in" : selectedIslemciTipi}
        if len(selectedIslemciNesli) != 0:
            flag = True
            base['islemciNesli'] = {"$in" : selectedIslemciNesli}
        if len(selectedRam) != 0:
            flag = True
            base['ram'] = {"$in" : selectedRam}
        if len(selectedDiskTuru) != 0:
            flag = True
            base['diskTuru'] = {"$in" : selectedDiskTuru}
        if len(selectedEkranBoyu) != 0:
            flag = True
            base['ekranBoyu'] = {"$in" : selectedEkranBoyu}
        if len(selectedDiskBoyutu) != 0:
            flag = True
            base['diskBoyutu'] = {"$in" : selectedDiskBoyutu}
        if len(selectedModelAdi) != 0:
            flag = True
            base['modelAdi'] = {"$in" : selectedModelAdi}
        
        base['site']={"$in" : ["Teknosa"]}

    print(base)

    if flag:
        
        
        # baglanma islemi
        myClient = pymongo.MongoClient('mongodb://abvag:abvag@localhost:27017')

        # database e gimre
        mydb = myClient['WebScraping']


        myCollection = mydb['shopping_matchproducts']

        allProducts = myCollection.find(base)

        allProducts = list(allProducts)


       
        print(len(allProducts))

        if len(allProducts) == 0:
            # filterdan veri gelmediyse
            print('Home gitmeliyim')
            return redirect('home')

        else:

            # start scrapping
            # trendYolAllThread = threading.Thread(target=gdwt.getTrendYolAll)
            # n11AllThread = threading.Thread(target=gdwt.getN11All)
            # cicekSepetiAllThread = threading.Thread(target=gdwt.getCicekSepetiAll)
            # hepsiBuradaAllThread = threading.Thread(target=gdwt.getHepsiBuradaAll)
            
            # trendYolAllThread.start()
            # n11AllThread.start()
            # cicekSepetiAllThread.start()
            # hepsiBuradaAllThread.start()

                        
            # trendYolAllThread.join()
            # n11AllThread.join()
            # cicekSepetiAllThread.join()
            # hepsiBuradaAllThread.join()


            


            # match data
            # for i in teknosa:
            #     # print(i)
            #     equalsProduct = []
            #     equalsProduct.append(i)

            #     for j in gdwt.trendYolAll:
            #         if j.prodTitle.lower().find(i['modelNo'].lower()) !=-1:
            #             equalsProduct.append(j)
            #             break
                
            #     for j in gdwt.n11All:

            #         # if j.modelNo!="Yok" and j.modelNo!="Belirtilmemiş" and j.modelNo!="" :
            #         #     if j.modelNo == i.modelNo:
            #         #         equalsProduct.append(j)
            #         #         break

            #         if j.prodTitle.lower().find(i['modelNo'].lower()) !=-1:
            #             equalsProduct.append(j)
            #             break
                
            #     for j in gdwt.cicekSepetiAll:
            #         if j.prodTitle.lower().find(i['modelNo'].lower()) !=-1:
            #             equalsProduct.append(j)
            #             break
                
            #     for j in gdwt.hepsiBuradaAll:
            #         if j.prodTitle.lower().find(i['modelNo'].lower()) !=-1:
            #             equalsProduct.append(j)
            #             break
                
            #     if len(equalsProduct) >=2:
            #         allProducts.append(equalsProduct)


            print('Filterdan sonra gelip de eslesen verilerin toplamı '+str(len(allProducts)))



            # kategorilerin ekranda sıralanmasıyla alakalı
            marka = set()
            isletimSistemi = set()
            islemciTipi = set()
            islemciNesli = set()
            ram = set()
            diskTuru = set()
            ekranBoyu = set()
            diskBoyutu = set()
            modelAdi = set()

            for item in allProducts:
          
                if item['marka'] != "":
                    # print('')
                    # print(item['marka'])
                    # print(item['marka'].capitalize())
                    # print('')
                    if item["marka"] == "ASUS":
                        marka.add(item["marka"].capitalize())
                    elif item["marka"] == "Hp":
                        marka.add(item["marka"].upper())
                    else:
                        marka.add(item["marka"])

                if item['isletimSistemi'] !="":
                    # print('')
                    # print(item['isletimSistemi'])
                    # print(item['isletimSistemi'].capitalize())
                    # print('')
                    isletimSistemi.add(item['isletimSistemi'])
                
                if item['islemciTipi'] != "":
                    # print('')
                    # print(item['islemciTipi'])
                    # print(item['islemciTipi'].title())
                    # print('')
                    
                    islemciTipi.add(item['islemciTipi'])

                if item['islemciNesli'] != "":
                    if(item['islemciNesli'] !='Yok'):
                        islemciNesli.add(int(item['islemciNesli']))
                    else:
                        islemciNesli.add(0)
                
                if item['ram'] != "":
                    ram.add(item['ram'])
                
                if item['diskTuru'] != "":
                    # print('')
                    # print(item['diskTuru'])
                    # print(item['diskTuru'].title())
                    # print('')
                    diskTuru.add(item['diskTuru'])
                
                if item['ekranBoyu'] != "":
                    # print('')
                    # print(item['ekranBoyu'])
                    # print(item['ekranBoyu'].capitalize())
                    # print('')
                    ekranBoyu.add(item['ekranBoyu'])
                
                if item['diskBoyutu'] != "":
                    # print('')
                    # print(item['diskBoyutu'])
                    # print(item['diskBoyutu'].capitalize())
                    # print('')
                    diskBoyutu.add(item['diskBoyutu'])

                if item['modelAdi'] != "":
                    
                    modelAdi.add(item['modelAdi'])
                
            
            marka=sorted(marka)
            islemciNesli=sorted(islemciNesli)
            islemciTipi=sorted(islemciTipi)
            ekranBoyu=sorted(ekranBoyu)
            diskBoyutu=sorted(diskBoyutu)
            ram=sorted(ram)
            
            
            # print(type(Products.objects.filter(site="Teknosa")))
            # print("Set Marka uzunlugu "+str(len(marka)))
            # print("Sets Marka")
            # print(marka)

                    


            # for eslesen in allProducts:

            #     print("Toplam eslesen "+ str(len(eslesen)))
            #     for i in eslesen:
            #         print(i.site)
            #     print("*"*100)
            

            print('Eslesen verilerin toplam sayısı ' + str(len(allProducts)))

            # for a in allProducts:
            #     for b in a:
            #         print(b.site)
            #     break
            posts=allProducts
            page = request.GET.get('page')
            num_of_item= 20
            paginator= Paginator(posts,num_of_item)
            PostsFinal=paginator.get_page(page)
            
            dynamicVar = {
                'products': PostsFinal,
                'markas':marka,
                'isletimSistemis' : isletimSistemi,
                'islemciTipis' : islemciTipi,
                'islemciNeslis' : islemciNesli,
                'rams': ram,
                'diskTurus': diskTuru,
                'ekranBoyus': ekranBoyu,
                'diskBoyutus': diskBoyutu,
                'modelAdis' : modelAdi  
            }
            #tum urunleri al dedik
            

            #render bize gelen requeste gore templatelerden dosya arıyor
            #spesifik bir yerden aramasını istedigimizden template altında dosya olusturduk
            # return render(request, "shopping/index.html", dynamicVar) 
            return render(request, "shopping/index.html", dynamicVar)

            

    else:
        return redirect('home')

def filterWithSearchBar(request):
    gdwt = GetDatasWithThread()
    flag = False
    base = {}
    
    if request.method == "POST":
       
        print("Search Bar Postuna girdim haberin olsun")
        
        barValue = request.POST["searchBar"]
        barValue = str(barValue)
        print("Bardan gelen value = "+barValue)

        
        """
        c ={}
        c['marka']={ "$in" : ["Monster", "Asus"]}
        c['modelAdi'] = {"$in" : ["Abra"]}
        """
        if len(barValue) > 0:
            flag = True
        base['site']={"$in" : ["Teknosa"]}

    print(base)

    if flag:
        
        
        # baglanma islemi
        myClient = pymongo.MongoClient('mongodb://abvag:abvag@localhost:27017')

        # database e gimre
        mydb = myClient['WebScraping']


        myCollection = mydb['shopping_matchproducts']

        tempProduct = myCollection.find(base)
        tempProduct = list(tempProduct)
        

        
        allProducts=[]

        for item in tempProduct:

            if barValue == "Teknosa":
                allProducts.append(item)
            
            elif barValue == "Trendyol":
                if item['site2'] == "Trendyol":
                    allProducts.append(item)
                elif item['site3'] == "Trendyol":
                    allProducts.append(item)
                elif item['site4'] == "Trendyol":
                    allProducts.append(item)
                elif item['site5'] == "Trendyol":
                    allProducts.append(item)
                elif item['site6'] == "Trendyol":
                    allProducts.append(item)
            
            elif barValue == "Hepsiburada":
                if item['site2'] == "Hepsiburada":
                    allProducts.append(item)
                elif item['site3'] == "Hepsiburada":
                    allProducts.append(item)
                elif item['site4'] == "Hepsiburada":
                    allProducts.append(item)
                elif item['site5'] == "Hepsiburada":
                    allProducts.append(item)
                elif item['site6'] == "Hepsiburada":
                    allProducts.append(item)
            
            elif barValue == "n11":
                if item['site2'] == "n11":
                    allProducts.append(item)
                elif item['site3'] == "n11":
                    allProducts.append(item)
                elif item['site4'] == "n11":
                    allProducts.append(item)
                elif item['site5'] == "n11":
                    allProducts.append(item)
                elif item['site6'] == "n11":
                    allProducts.append(item)
            
            elif barValue == "ÇiçekSepeti":
                if item['site2'] == "ÇiçekSepeti":
                    allProducts.append(item)
                elif item['site3'] == "ÇiçekSepeti":
                    allProducts.append(item)
                elif item['site4'] == "ÇiçekSepeti":
                    allProducts.append(item)
                elif item['site5'] == "ÇiçekSepeti":
                    allProducts.append(item)
                elif item['site6'] == "ÇiçekSepeti":
                    allProducts.append(item)
            elif barValue == "41LaptopStore":
                if item['site2'] == "41LaptopStore":
                    allProducts.append(item)
                elif item['site3'] == "41LaptopStore":
                    allProducts.append(item)
                elif item['site4'] == "41LaptopStore":
                    allProducts.append(item)
                elif item['site5'] == "41LaptopStore":
                    allProducts.append(item)
                elif item['site6'] == "41LaptopStore":
                    allProducts.append(item)



            elif item['prodTitle'].find(barValue) !=-1:
                print('Title icinde buldum')
                allProducts.append(item)

        print("allProdycts uzunlugu "+ str(len(allProducts)))
        print(allProducts)
        if len(allProducts) == 0:
            # filterdan veri gelmediyse
            print('Home gitmeliyim')
            return redirect('home')

        else:

            # start scrapping
            # trendYolAllThread = threading.Thread(target=gdwt.getTrendYolAll)
            # n11AllThread = threading.Thread(target=gdwt.getN11All)
            # cicekSepetiAllThread = threading.Thread(target=gdwt.getCicekSepetiAll)
            # hepsiBuradaAllThread = threading.Thread(target=gdwt.getHepsiBuradaAll)
            
            # trendYolAllThread.start()
            # n11AllThread.start()
            # cicekSepetiAllThread.start()
            # hepsiBuradaAllThread.start()

                        
            # trendYolAllThread.join()
            # n11AllThread.join()
            # cicekSepetiAllThread.join()
            # hepsiBuradaAllThread.join()


           


            # match data
            # for i in teknosa:
            #     # print(i)
            #     equalsProduct = []
            #     equalsProduct.append(i)

            #     for j in gdwt.trendYolAll:
            #         if j.prodTitle.lower().find(i['modelNo'].lower()) !=-1:
            #             equalsProduct.append(j)
            #             break
                
            #     for j in gdwt.n11All:

            #         # if j.modelNo!="Yok" and j.modelNo!="Belirtilmemiş" and j.modelNo!="" :
            #         #     if j.modelNo == i.modelNo:
            #         #         equalsProduct.append(j)
            #         #         break

            #         if j.prodTitle.lower().find(i['modelNo'].lower()) !=-1:
            #             equalsProduct.append(j)
            #             break
                
            #     for j in gdwt.cicekSepetiAll:
            #         if j.prodTitle.lower().find(i['modelNo'].lower()) !=-1:
            #             equalsProduct.append(j)
            #             break
                
            #     for j in gdwt.hepsiBuradaAll:
            #         if j.prodTitle.lower().find(i['modelNo'].lower()) !=-1:
            #             equalsProduct.append(j)
            #             break
                
            #     if len(equalsProduct) >=2:
            #         allProducts.append(equalsProduct)


            print('Filterdan sonra gelip de eslesen verilerin toplamı '+str(len(allProducts)))



            # kategorilerin ekranda sıralanmasıyla alakalı
            marka = set()
            isletimSistemi = set()
            islemciTipi = set()
            islemciNesli = set()
            ram = set()
            diskTuru = set()
            ekranBoyu = set()
            diskBoyutu = set()
            modelAdi = set()

            for item in allProducts:

                if item['marka'] != "":
                    # print('')
                    # print(item['marka'])
                    # print(item['marka'].capitalize())
                    # print('')
                    if item["marka"] == "ASUS":
                        marka.add(item["marka"].capitalize())
                    elif item["marka"] == "Hp":
                        marka.add(item["marka"].upper())
                    else:
                        marka.add(item["marka"])

                if item['isletimSistemi'] !="":
                    # print('')
                    # print(item['isletimSistemi'])
                    # print(item['isletimSistemi'].capitalize())
                    # print('')
                    isletimSistemi.add(item['isletimSistemi'])
                
                if item['islemciTipi'] != "":
                    # print('')
                    # print(item['islemciTipi'])
                    # print(item['islemciTipi'].title())
                    # print('')
                    
                    islemciTipi.add(item['islemciTipi'])

                if item['islemciNesli'] != "":
                    if(item['islemciNesli'] !='Yok'):
                        islemciNesli.add(int(item['islemciNesli']))
                    else:
                        islemciNesli.add(0)
                
                if item['ram'] != "":
                    ram.add(item['ram'])
                
                if item['diskTuru'] != "":
                    # print('')
                    # print(item['diskTuru'])
                    # print(item['diskTuru'].title())
                    # print('')
                    diskTuru.add(item['diskTuru'])
                
                if item['ekranBoyu'] != "":
                    # print('')
                    # print(item['ekranBoyu'])
                    # print(item['ekranBoyu'].capitalize())
                    # print('')
                    ekranBoyu.add(item['ekranBoyu'])
                
                if item['diskBoyutu'] != "":
                    # print('')
                    # print(item['diskBoyutu'])
                    # print(item['diskBoyutu'].capitalize())
                    # print('')
                    diskBoyutu.add(item['diskBoyutu'])

                if item['modelAdi'] != "":
                    
                    modelAdi.add(item['modelAdi'])
                
            
            marka=sorted(marka)
            islemciNesli=sorted(islemciNesli)
            islemciTipi=sorted(islemciTipi)
            ekranBoyu=sorted(ekranBoyu)
            diskBoyutu=sorted(diskBoyutu)
            ram=sorted(ram)
            
            
            # print(type(Products.objects.filter(site="Teknosa")))
            # print("Set Marka uzunlugu "+str(len(marka)))
            # print("Sets Marka")
            # print(marka)

                    


            # for eslesen in allProducts:

            #     print("Toplam eslesen "+ str(len(eslesen)))
            #     for i in eslesen:
            #         print(i.site)
            #     print("*"*100)
            

            print('Eslesen verilerin toplam sayısı ' + str(len(allProducts)))

            # for a in allProducts:
            #     for b in a:
            #         print(b.site)
            #     break
            posts=allProducts
            page = request.GET.get('page')
            num_of_item= 20
            paginator= Paginator(posts,num_of_item)
            PostsFinal=paginator.get_page(page)
            
            dynamicVar = {
                'products': PostsFinal,
                'markas':marka,
                'isletimSistemis' : isletimSistemi,
                'islemciTipis' : islemciTipi,
                'islemciNeslis' : islemciNesli,
                'rams': ram,
                'diskTurus': diskTuru,
                'ekranBoyus': ekranBoyu,
                'diskBoyutus': diskBoyutu,
                'modelAdis' : modelAdi  
            }
            #tum urunleri al dedik
            

            #render bize gelen requeste gore templatelerden dosya arıyor
            #spesifik bir yerden aramasını istedigimizden template altında dosya olusturduk
            # return render(request, "shopping/index.html", dynamicVar) 
            return render(request, "shopping/index.html", dynamicVar)

            

    else:
        return redirect('home')

def DescSortProd(request):
    
    gdwt = GetDatasWithThread()

    # teknosaAllThread = threading.Thread(target=gdwt.DgetTeknosaAll)
    # trendYolAllThread = threading.Thread(target=gdwt.DgetTrendYolAll)
    # n11AllThread = threading.Thread(target=gdwt.DgetN11All)
    # cicekSepetiAllThread = threading.Thread(target=gdwt.DgetCicekSepetiAll)
    # hepsiBuradaAllThread = threading.Thread(target=gdwt.DgetHepsiBuradaAll)

    # teknosaAll = Products.objects.filter(site="Teknosa")
    # trendYolAll = Products.objects.filter(site="Trendyol")
    # n11All = Products.objects.filter(site="n11")
    # cicekSepetiAll = Products.objects.filter(site="ÇiçekSepeti")
    # hepsiBuradaAll = Products.objects.filter(site="Hepsiburada")

    # teknosaAllThread.start()
    # trendYolAllThread.start()
    # n11AllThread.start()
    # cicekSepetiAllThread.start()
    # hepsiBuradaAllThread.start()

    # teknosaAllThread.join()
    # trendYolAllThread.join()
    # n11AllThread.join()
    # cicekSepetiAllThread.join()
    # hepsiBuradaAllThread.join()


    # print("Teknosa  "+ str(len(gdwt.teknosaAll)))
    # print("Trend Yol    " + str(len(gdwt.trendYolAll)))
    # print("N11  " + str(len(gdwt.n11All)))
    # print("Cicek Sepeti     "+ str(len(gdwt.cicekSepetiAll)))
    # print("Hepsi Burda  " + str(len(gdwt.hepsiBuradaAll)))
    
    
    # allProducts = []

    # for i in gdwt.teknosaAll:

    #     equalsProduct = []
    #     equalsProduct.append(i)

    #     for j in gdwt.trendYolAll:
    #         if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
    #             equalsProduct.append(j)
    #             break
        
    #     for j in gdwt.n11All:

    #         # if j.modelNo!="Yok" and j.modelNo!="Belirtilmemiş" and j.modelNo!="" :
    #         #     if j.modelNo == i.modelNo:
    #         #         equalsProduct.append(j)
    #         #         break

    #         if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
    #             equalsProduct.append(j)
    #             break
        
    #     for j in gdwt.cicekSepetiAll:
    #         if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
    #             equalsProduct.append(j)
    #             break
        
    #     for j in gdwt.hepsiBuradaAll:
    #         if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
    #             equalsProduct.append(j)
    #             break
        
    #     if len(equalsProduct) >=2:
    #         allProducts.append(equalsProduct)
        
    
    # marka = set()
    # isletimSistemi = set()
    # islemciTipi = set()
    # islemciNesli = set()
    # ram = set()
    # diskTuru = set()
    # ekranBoyu = set()
    # diskBoyutu = set()

    # for eslesen in allProducts:

    #     for item in eslesen:

    #         if item.site == 'Teknosa':
    #             if item.marka != "":
                    
    #                 marka.add(item.marka.capitalize())

    #             if item.isletimSistemi !="":
    #                 isletimSistemi.add(item.isletimSistemi.capitalize())
                
    #             if item.islemciTipi != "":
    #                 islemciTipi.add(item.islemciTipi.title())

    #             if item.islemciNesli != "":
    #                 if(item.islemciNesli !='Yok'):
    #                     islemciNesli.add(int(item.islemciNesli))
    #                 else:
    #                     islemciNesli.add(0)
                
    #             if item.ram != "":
    #                 ram.add(int(item.ram.split(' ')[0]))
                
    #             if item.diskTuru != "":
    #                 diskTuru.add(item.diskTuru.title())
                
    #             if item.ekranBoyu != "":
    #                 ekranBoyu.add(item.ekranBoyu.capitalize())
                
    #             if item.diskBoyutu != "":
    #                 diskBoyutu.add(item.diskBoyutu.capitalize())
    #             break
    
    # marka=sorted(marka)
    # islemciNesli=sorted(islemciNesli)
    # islemciTipi=sorted(islemciTipi)
    # ekranBoyu=sorted(ekranBoyu)
    # diskBoyutu=sorted(diskBoyutu)
    # ram=sorted(ram)
    
    
    # print(type(Products.objects.filter(site="Teknosa")))
    # print("Set Marka uzunlugu "+str(len(marka)))
    # print("Sets Marka")
    # print(marka)

            


    # for eslesen in allProducts:

    #     print("Toplam eslesen "+ str(len(eslesen)))
    #     for i in eslesen:
    #         print(i.site)
    #     print("*"*100)
    

    # print('Eslesen verilerin toplam sayısı ' + str(len(allProducts)))

    # for a in allProducts:
    #     for b in a:
    #         print(b.site)
    #     break
    allProducts = MatchProducts.objects.all().order_by("-fiyat")

    
    for i in allProducts:
        print('***********************************')
        print(i)
        print('***********************************')

    # kategorilerin ekranda sıralanmasıyla alakalı
    # model adini ekledim
    marka = set()
    modelAdi = set()
    isletimSistemi = set()
    islemciTipi = set()
    islemciNesli = set()
    ram = set()
    diskTuru = set()
    ekranBoyu = set()
    diskBoyutu = set()


    
    # kategori filter

    for item in allProducts:
 
        if item.marka != "":
            # print('')
            # print(item.marka)
            # print(item.marka.capitalize())
            # print('')
            if item.marka == "ASUS":
                marka.add(item.marka.capitalize())
            elif item.marka == "Hp":
                marka.add(item.marka.upper())
            else:
                marka.add(item.marka)
        
        if item.modelAdi !="":
            print(item.modelAdi)
            modelAdi.add(item.modelAdi)


        if item.isletimSistemi !="":
            # print('')
            # print(item.isletimSistemi)
            # print(item.isletimSistemi.capitalize())
            # print('')
            isletimSistemi.add(item.isletimSistemi)
        
        if item.islemciTipi != "":
            # print('')
            # print(item.islemciTipi)
            # print(item.islemciTipi.title())
            # print('')
            islemciTipi.add(item.islemciTipi)

        if item.islemciNesli != "":
            if(item.islemciNesli !='Yok'):
                islemciNesli.add(int(item.islemciNesli))
            else:
                islemciNesli.add(0)
            
        
        if item.ram != "":
            # print('')
            # print(item.ram)
            # print(item.ram.title())
            # print('')
            ram.add(item.ram)
        
        if item.diskTuru != "":
            # print('')
            # print(item.diskTuru)
            # print(item.diskTuru.title())
            # print('')
            diskTuru.add(item.diskTuru)
        
        if item.ekranBoyu != "":
            # print('')
            # print(item.ekranBoyu)
            # print(item.ekranBoyu.capitalize())
            # print('')
            ekranBoyu.add(item.ekranBoyu)
        
        if item.diskBoyutu != "":
            # print('')
            # print(item.diskBoyutu)
            # print(item.diskBoyutu.capitalize())
            # print('')
            diskBoyutu.add(item.diskBoyutu)
        
    

    # with open('Kategoriler.txt','w', encoding="utf-8") as f:

    #     for item in marka:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in islemciNesli:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in islemciTipi:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in ekranBoyu:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in diskBoyutu:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in ram:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in isletimSistemi:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in diskTuru:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in modelAdi:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')
       
    
     
   
        
        


    marka=sorted(marka)
    islemciNesli=sorted(islemciNesli)
    islemciTipi=sorted(islemciTipi)
    ekranBoyu=sorted(ekranBoyu)
    diskBoyutu=sorted(diskBoyutu)
    ram=sorted(ram)
    
    
    # print(type(Products.objects.filter(site="Teknosa")))
    # print("Set Marka uzunlugu "+str(len(marka)))
    # print("Sets Marka")
    # print(marka)

            


    # for eslesen in allProducts:

    #     print("Toplam eslesen "+ str(len(eslesen)))
    #     for i in eslesen:
    #         print(i.site)
    #     print("*"*100)
    

    print('Eslesen verilerin toplam sayısı ' + str(len(allProducts)))

    # for a in allProducts:
    #     for b in a:
    #         print(b.site)
    #     break
    posts=allProducts
    page = request.GET.get('page')
    num_of_item= 20
    paginator= Paginator(posts,num_of_item)
    PostsFinal=paginator.get_page(page)
    
    dynamicVar = {
        'products': PostsFinal,
        'markas':marka,
        'isletimSistemis' : isletimSistemi,
        'islemciTipis' : islemciTipi,
        'islemciNeslis' : islemciNesli,
        'rams': ram,
        'diskTurus': diskTuru,
        'ekranBoyus': ekranBoyu,
        'diskBoyutus': diskBoyutu,
        'modelAdis': modelAdi    
    }
    #tum urunleri al dedik
    #tum urunleri al dedik

    #render bize gelen requeste gore templatelerden dosya arıyor
    #spesifik bir yerden aramasını istedigimizden template altında dosya olusturduk
    # return render(request, "shopping/index.html", dynamicVar) 
    return render(request, "shopping/index.html", dynamicVar)

def DescStarProd(request):
        
    gdwt = GetDatasWithThread()

    # teknosaAllThread = threading.Thread(target=gdwt.DgetTeknosaAll)
    # trendYolAllThread = threading.Thread(target=gdwt.DgetTrendYolAll)
    # n11AllThread = threading.Thread(target=gdwt.DgetN11All)
    # cicekSepetiAllThread = threading.Thread(target=gdwt.DgetCicekSepetiAll)
    # hepsiBuradaAllThread = threading.Thread(target=gdwt.DgetHepsiBuradaAll)

    # teknosaAll = Products.objects.filter(site="Teknosa")
    # trendYolAll = Products.objects.filter(site="Trendyol")
    # n11All = Products.objects.filter(site="n11")
    # cicekSepetiAll = Products.objects.filter(site="ÇiçekSepeti")
    # hepsiBuradaAll = Products.objects.filter(site="Hepsiburada")

    # teknosaAllThread.start()
    # trendYolAllThread.start()
    # n11AllThread.start()
    # cicekSepetiAllThread.start()
    # hepsiBuradaAllThread.start()

    # teknosaAllThread.join()
    # trendYolAllThread.join()
    # n11AllThread.join()
    # cicekSepetiAllThread.join()
    # hepsiBuradaAllThread.join()


    # print("Teknosa  "+ str(len(gdwt.teknosaAll)))
    # print("Trend Yol    " + str(len(gdwt.trendYolAll)))
    # print("N11  " + str(len(gdwt.n11All)))
    # print("Cicek Sepeti     "+ str(len(gdwt.cicekSepetiAll)))
    # print("Hepsi Burda  " + str(len(gdwt.hepsiBuradaAll)))
    
    
    # allProducts = []

    # for i in gdwt.teknosaAll:

    #     equalsProduct = []
    #     equalsProduct.append(i)

    #     for j in gdwt.trendYolAll:
    #         if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
    #             equalsProduct.append(j)
    #             break
        
    #     for j in gdwt.n11All:

    #         # if j.modelNo!="Yok" and j.modelNo!="Belirtilmemiş" and j.modelNo!="" :
    #         #     if j.modelNo == i.modelNo:
    #         #         equalsProduct.append(j)
    #         #         break

    #         if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
    #             equalsProduct.append(j)
    #             break
        
    #     for j in gdwt.cicekSepetiAll:
    #         if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
    #             equalsProduct.append(j)
    #             break
        
    #     for j in gdwt.hepsiBuradaAll:
    #         if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
    #             equalsProduct.append(j)
    #             break
        
    #     if len(equalsProduct) >=2:
    #         allProducts.append(equalsProduct)
        
    
    # marka = set()
    # isletimSistemi = set()
    # islemciTipi = set()
    # islemciNesli = set()
    # ram = set()
    # diskTuru = set()
    # ekranBoyu = set()
    # diskBoyutu = set()

    # for eslesen in allProducts:

    #     for item in eslesen:

    #         if item.site == 'Teknosa':
    #             if item.marka != "":
                    
    #                 marka.add(item.marka.capitalize())

    #             if item.isletimSistemi !="":
    #                 isletimSistemi.add(item.isletimSistemi.capitalize())
                
    #             if item.islemciTipi != "":
    #                 islemciTipi.add(item.islemciTipi.title())

    #             if item.islemciNesli != "":
    #                 if(item.islemciNesli !='Yok'):
    #                     islemciNesli.add(int(item.islemciNesli))
    #                 else:
    #                     islemciNesli.add(0)
                
    #             if item.ram != "":
    #                 ram.add(int(item.ram.split(' ')[0]))
                
    #             if item.diskTuru != "":
    #                 diskTuru.add(item.diskTuru.title())
                
    #             if item.ekranBoyu != "":
    #                 ekranBoyu.add(item.ekranBoyu.capitalize())
                
    #             if item.diskBoyutu != "":
    #                 diskBoyutu.add(item.diskBoyutu.capitalize())
    #             break
    
    # marka=sorted(marka)
    # islemciNesli=sorted(islemciNesli)
    # islemciTipi=sorted(islemciTipi)
    # ekranBoyu=sorted(ekranBoyu)
    # diskBoyutu=sorted(diskBoyutu)
    # ram=sorted(ram)
    
    
    # print(type(Products.objects.filter(site="Teknosa")))
    # print("Set Marka uzunlugu "+str(len(marka)))
    # print("Sets Marka")
    # print(marka)

            


    # for eslesen in allProducts:

    #     print("Toplam eslesen "+ str(len(eslesen)))
    #     for i in eslesen:
    #         print(i.site)
    #     print("*"*100)
    

    # print('Eslesen verilerin toplam sayısı ' + str(len(allProducts)))

    # for a in allProducts:
    #     for b in a:
    #         print(b.site)
    #     break
    allProducts = MatchProducts.objects.all().order_by("-puani")

    
    for i in allProducts:
        print('***********************************')
        print(i)
        print('***********************************')

    # kategorilerin ekranda sıralanmasıyla alakalı
    # model adini ekledim
    marka = set()
    modelAdi = set()
    isletimSistemi = set()
    islemciTipi = set()
    islemciNesli = set()
    ram = set()
    diskTuru = set()
    ekranBoyu = set()
    diskBoyutu = set()


    
    # kategori filter

    for item in allProducts:
 
        if item.marka != "":
            # print('')
            # print(item.marka)
            # print(item.marka.capitalize())
            # print('')
            if item.marka == "ASUS":
                marka.add(item.marka.capitalize())
            elif item.marka == "Hp":
                marka.add(item.marka.upper())
            else:
                marka.add(item.marka)
        
        if item.modelAdi !="":
            print(item.modelAdi)
            modelAdi.add(item.modelAdi)


        if item.isletimSistemi !="":
            # print('')
            # print(item.isletimSistemi)
            # print(item.isletimSistemi.capitalize())
            # print('')
            isletimSistemi.add(item.isletimSistemi)
        
        if item.islemciTipi != "":
            # print('')
            # print(item.islemciTipi)
            # print(item.islemciTipi.title())
            # print('')
            islemciTipi.add(item.islemciTipi)

        if item.islemciNesli != "":
            if(item.islemciNesli !='Yok'):
                islemciNesli.add(int(item.islemciNesli))
            else:
                islemciNesli.add(0)
            
        
        if item.ram != "":
            # print('')
            # print(item.ram)
            # print(item.ram.title())
            # print('')
            ram.add(item.ram)
        
        if item.diskTuru != "":
            # print('')
            # print(item.diskTuru)
            # print(item.diskTuru.title())
            # print('')
            diskTuru.add(item.diskTuru)
        
        if item.ekranBoyu != "":
            # print('')
            # print(item.ekranBoyu)
            # print(item.ekranBoyu.capitalize())
            # print('')
            ekranBoyu.add(item.ekranBoyu)
        
        if item.diskBoyutu != "":
            # print('')
            # print(item.diskBoyutu)
            # print(item.diskBoyutu.capitalize())
            # print('')
            diskBoyutu.add(item.diskBoyutu)
        
    

    # with open('Kategoriler.txt','w', encoding="utf-8") as f:

    #     for item in marka:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in islemciNesli:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in islemciTipi:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in ekranBoyu:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in diskBoyutu:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in ram:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in isletimSistemi:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in diskTuru:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in modelAdi:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')
       
    
     
   
        
        


    marka=sorted(marka)
    islemciNesli=sorted(islemciNesli)
    islemciTipi=sorted(islemciTipi)
    ekranBoyu=sorted(ekranBoyu)
    diskBoyutu=sorted(diskBoyutu)
    ram=sorted(ram)
    
    
    # print(type(Products.objects.filter(site="Teknosa")))
    # print("Set Marka uzunlugu "+str(len(marka)))
    # print("Sets Marka")
    # print(marka)

            


    # for eslesen in allProducts:

    #     print("Toplam eslesen "+ str(len(eslesen)))
    #     for i in eslesen:
    #         print(i.site)
    #     print("*"*100)
    

    print('Eslesen verilerin toplam sayısı ' + str(len(allProducts)))

    # for a in allProducts:
    #     for b in a:
    #         print(b.site)
    #     break
    posts=allProducts
    page = request.GET.get('page')
    num_of_item= 20
    paginator= Paginator(posts,num_of_item)
    PostsFinal=paginator.get_page(page)
    
    dynamicVar = {
        'products': PostsFinal,
        'markas':marka,
        'isletimSistemis' : isletimSistemi,
        'islemciTipis' : islemciTipi,
        'islemciNeslis' : islemciNesli,
        'rams': ram,
        'diskTurus': diskTuru,
        'ekranBoyus': ekranBoyu,
        'diskBoyutus': diskBoyutu,
        'modelAdis': modelAdi    
    }
    #tum urunleri al dedik
    #tum urunleri al dedik

    #render bize gelen requeste gore templatelerden dosya arıyor
    #spesifik bir yerden aramasını istedigimizden template altında dosya olusturduk
    # return render(request, "shopping/index.html", dynamicVar) 
    return render(request, "shopping/index.html", dynamicVar)

def get_match_products():
    id=10000
    listss=[]
    db=Database()
    db2=Database2()
    db.delete_col()
    db2.delete_col()
    gdwt = GetDatasWithThread()    
    teknosaAllThread = threading.Thread(target=gdwt.getTeknosaAll)
    trendYolAllThread = threading.Thread(target=gdwt.getTrendYolAll)
    n11AllThread = threading.Thread(target=gdwt.getN11All)
    cicekSepetiAllThread = threading.Thread(target=gdwt.getCicekSepetiAll)
    hepsiBuradaAllThread = threading.Thread(target=gdwt.getHepsiBuradaAll)
    laptop41storeAllThread= threading.Thread(target=gdwt.getLaptop41StoreAll)

    # teknosaAll = Products.objects.filter(site="Teknosa")
    # trendYolAll = Products.objects.filter(site="Trendyol")
    # n11All = Products.objects.filter(site="n11")
    # cicekSepetiAll = Products.objects.filter(site="ÇiçekSepeti")
    # hepsiBuradaAll = Products.objects.filter(site="Hepsiburada")

    teknosaAllThread.start()
    trendYolAllThread.start()
    n11AllThread.start()
    cicekSepetiAllThread.start()
    hepsiBuradaAllThread.start()
    laptop41storeAllThread.start()


    teknosaAllThread.join()
    trendYolAllThread.join()
    n11AllThread.join()
    cicekSepetiAllThread.join()
    hepsiBuradaAllThread.join()
    laptop41storeAllThread.join()

    # print("Teknosa  "+ str(len(gdwt.teknosaAll)))
    # print("Trend Yol    " + str(len(gdwt.trendYolAll)))
    # print("N11  " + str(len(gdwt.n11All)))
    # print("Cicek Sepeti     "+ str(len(gdwt.cicekSepetiAll)))
    # print("Hepsi Burda  " + str(len(gdwt.hepsiBuradaAll)))

    allProducts = []

    for i in gdwt.teknosaAll:
        # print(i)
        equalsProduct = []
        equalsProduct.append(i)
        productDict = {
                'marka':i.marka,
                'modelAdi':i.modelAdi,
                'modelNo':i.modelNo,
                'isletimSistemi':i.isletimSistemi,
                'islemciTipi':i.islemciTipi,
                'islemciNesli':i.islemciNesli,
                'ram':i.ram,
                'diskBoyutu':i.diskBoyutu,
                'diskTuru':i.diskTuru,
                'ekranBoyu':i.ekranBoyu,
                'puani':i.puani,
                'fiyat':i.fiyat,
                'site':i.site,
                'prodLink':i.prodLink,
                'prodImageLink':i.imageLink,
                'prodTitle':i.prodTitle,
                'prodId':i.id,
                'puani2':"",
                'fiyat2':"",
                'site2':"",
                'prodLink2':"",
                'puani3':"",
                'fiyat3':"",
                'site3':"",
                'prodLink3':"",
                'puani4':"",
                'fiyat4':"",
                'site4':"",
                'prodLink4':"",
                'puani5':"",
                'fiyat5':"",
                'site5':"",
                'prodLink5':"",
                'puani6':"",
                'fiyat6':"",
                'site6':"",
                'prodLink6':"",
                'puani6':"",
                'fiyat6':"",
                'site6':"",
                'prodLink6':"",
                'id':id
            }
        for j in gdwt.trendYolAll:
            if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
                equalsProduct.append(j)
                break
        
        for j in gdwt.n11All:

            # if j.modelNo!="Yok" and j.modelNo!="Belirtilmemiş" and j.modelNo!="" :
            #     if j.modelNo == i.modelNo:
            #         equalsProduct.append(j)
            #         break

            if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
                equalsProduct.append(j)
                break
        
        for j in gdwt.cicekSepetiAll:
            if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
                equalsProduct.append(j)
                break
        
        for j in gdwt.hepsiBuradaAll:
            if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
                equalsProduct.append(j)
                break
        
        for j in gdwt.laptop41storeAll:
            if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
                equalsProduct.append(j)
                break
        
        if len(equalsProduct) >=2:
            index=1
            for m in equalsProduct:
                if(index==1):
                    index+=1
                    continue
                if(m.site=='41LaptopStore'):
                    productDict['puani'+str(index)]=m.puani
                    productDict['fiyat'+str(index)]=m.fiyat
                    productDict['site'+str(index)]=m.site
                    productDict['prodLink'+str(index)]="http://"+m.prodLink
                else:
                    productDict['puani'+str(index)]=m.puani
                    productDict['fiyat'+str(index)]=m.fiyat
                    productDict['site'+str(index)]=m.site
                    productDict['prodLink'+str(index)]=m.prodLink
                index=index+1
            listss.append(productDict)
            db.add_one_product(productDict)
            db2.add_one_product(productDict)
            id=id+1
    print(len(listss))

get_match_products()
def AscSortProd(request):
    
    gdwt = GetDatasWithThread()

    # teknosaAllThread = threading.Thread(target=gdwt.DgetTeknosaAll)
    # trendYolAllThread = threading.Thread(target=gdwt.DgetTrendYolAll)
    # n11AllThread = threading.Thread(target=gdwt.DgetN11All)
    # cicekSepetiAllThread = threading.Thread(target=gdwt.DgetCicekSepetiAll)
    # hepsiBuradaAllThread = threading.Thread(target=gdwt.DgetHepsiBuradaAll)

    # teknosaAll = Products.objects.filter(site="Teknosa")
    # trendYolAll = Products.objects.filter(site="Trendyol")
    # n11All = Products.objects.filter(site="n11")
    # cicekSepetiAll = Products.objects.filter(site="ÇiçekSepeti")
    # hepsiBuradaAll = Products.objects.filter(site="Hepsiburada")

    # teknosaAllThread.start()
    # trendYolAllThread.start()
    # n11AllThread.start()
    # cicekSepetiAllThread.start()
    # hepsiBuradaAllThread.start()

    # teknosaAllThread.join()
    # trendYolAllThread.join()
    # n11AllThread.join()
    # cicekSepetiAllThread.join()
    # hepsiBuradaAllThread.join()


    # print("Teknosa  "+ str(len(gdwt.teknosaAll)))
    # print("Trend Yol    " + str(len(gdwt.trendYolAll)))
    # print("N11  " + str(len(gdwt.n11All)))
    # print("Cicek Sepeti     "+ str(len(gdwt.cicekSepetiAll)))
    # print("Hepsi Burda  " + str(len(gdwt.hepsiBuradaAll)))
    
    
    # allProducts = []

    # for i in gdwt.teknosaAll:

    #     equalsProduct = []
    #     equalsProduct.append(i)

    #     for j in gdwt.trendYolAll:
    #         if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
    #             equalsProduct.append(j)
    #             break
        
    #     for j in gdwt.n11All:

    #         # if j.modelNo!="Yok" and j.modelNo!="Belirtilmemiş" and j.modelNo!="" :
    #         #     if j.modelNo == i.modelNo:
    #         #         equalsProduct.append(j)
    #         #         break

    #         if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
    #             equalsProduct.append(j)
    #             break
        
    #     for j in gdwt.cicekSepetiAll:
    #         if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
    #             equalsProduct.append(j)
    #             break
        
    #     for j in gdwt.hepsiBuradaAll:
    #         if j.prodTitle.lower().find(i.modelNo.lower()) !=-1:
    #             equalsProduct.append(j)
    #             break
        
    #     if len(equalsProduct) >=2:
    #         allProducts.append(equalsProduct)
        
    
    # marka = set()
    # isletimSistemi = set()
    # islemciTipi = set()
    # islemciNesli = set()
    # ram = set()
    # diskTuru = set()
    # ekranBoyu = set()
    # diskBoyutu = set()

    # for eslesen in allProducts:

    #     for item in eslesen:

    #         if item.site == 'Teknosa':
    #             if item.marka != "":
                    
    #                 marka.add(item.marka.capitalize())

    #             if item.isletimSistemi !="":
    #                 isletimSistemi.add(item.isletimSistemi.capitalize())
                
    #             if item.islemciTipi != "":
    #                 islemciTipi.add(item.islemciTipi.title())

    #             if item.islemciNesli != "":
    #                 if(item.islemciNesli !='Yok'):
    #                     islemciNesli.add(int(item.islemciNesli))
    #                 else:
    #                     islemciNesli.add(0)
                
    #             if item.ram != "":
    #                 ram.add(int(item.ram.split(' ')[0]))
                
    #             if item.diskTuru != "":
    #                 diskTuru.add(item.diskTuru.title())
                
    #             if item.ekranBoyu != "":
    #                 ekranBoyu.add(item.ekranBoyu.capitalize())
                
    #             if item.diskBoyutu != "":
    #                 diskBoyutu.add(item.diskBoyutu.capitalize())
    #             break
    
    # marka=sorted(marka)
    # islemciNesli=sorted(islemciNesli)
    # islemciTipi=sorted(islemciTipi)
    # ekranBoyu=sorted(ekranBoyu)
    # diskBoyutu=sorted(diskBoyutu)
    # ram=sorted(ram)
    
    
    # print(type(Products.objects.filter(site="Teknosa")))
    # print("Set Marka uzunlugu "+str(len(marka)))
    # print("Sets Marka")
    # print(marka)

            


    # for eslesen in allProducts:

    #     print("Toplam eslesen "+ str(len(eslesen)))
    #     for i in eslesen:
    #         print(i.site)
    #     print("*"*100)
    

    # print('Eslesen verilerin toplam sayısı ' + str(len(allProducts)))

    # for a in allProducts:
    #     for b in a:
    #         print(b.site)
    #     break
    allProducts = MatchProducts.objects.all().order_by("fiyat")

    
    for i in allProducts:
        print('***********************************')
        print(i)
        print('***********************************')

    # kategorilerin ekranda sıralanmasıyla alakalı
    # model adini ekledim
    marka = set()
    modelAdi = set()
    isletimSistemi = set()
    islemciTipi = set()
    islemciNesli = set()
    ram = set()
    diskTuru = set()
    ekranBoyu = set()
    diskBoyutu = set()


    
    # kategori filter

    for item in allProducts:
 
        if item.marka != "":
            # print('')
            # print(item.marka)
            # print(item.marka.capitalize())
            # print('')
            if item.marka == "ASUS":
                marka.add(item.marka.capitalize())
            elif item.marka == "Hp":
                marka.add(item.marka.upper())
            else:
                marka.add(item.marka)
        
        if item.modelAdi !="":
            print(item.modelAdi)
            modelAdi.add(item.modelAdi)


        if item.isletimSistemi !="":
            # print('')
            # print(item.isletimSistemi)
            # print(item.isletimSistemi.capitalize())
            # print('')
            isletimSistemi.add(item.isletimSistemi)
        
        if item.islemciTipi != "":
            # print('')
            # print(item.islemciTipi)
            # print(item.islemciTipi.title())
            # print('')
            islemciTipi.add(item.islemciTipi)

        if item.islemciNesli != "":
            if(item.islemciNesli !='Yok'):
                islemciNesli.add(int(item.islemciNesli))
            else:
                islemciNesli.add(0)
            
        
        if item.ram != "":
            # print('')
            # print(item.ram)
            # print(item.ram.title())
            # print('')
            ram.add(item.ram)
        
        if item.diskTuru != "":
            # print('')
            # print(item.diskTuru)
            # print(item.diskTuru.title())
            # print('')
            diskTuru.add(item.diskTuru)
        
        if item.ekranBoyu != "":
            # print('')
            # print(item.ekranBoyu)
            # print(item.ekranBoyu.capitalize())
            # print('')
            ekranBoyu.add(item.ekranBoyu)
        
        if item.diskBoyutu != "":
            # print('')
            # print(item.diskBoyutu)
            # print(item.diskBoyutu.capitalize())
            # print('')
            diskBoyutu.add(item.diskBoyutu)
        
    

    # with open('Kategoriler.txt','w', encoding="utf-8") as f:

    #     for item in marka:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in islemciNesli:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in islemciTipi:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in ekranBoyu:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in diskBoyutu:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in ram:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in isletimSistemi:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in diskTuru:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')

    #     for item in modelAdi:
    #         f.write('"')
    #         f.write(str(item))
    #         f.write('"')
    #         f.write(',')
       
    
     
   
        
        


    marka=sorted(marka)
    islemciNesli=sorted(islemciNesli)
    islemciTipi=sorted(islemciTipi)
    ekranBoyu=sorted(ekranBoyu)
    diskBoyutu=sorted(diskBoyutu)
    ram=sorted(ram)
    
    
    # print(type(Products.objects.filter(site="Teknosa")))
    # print("Set Marka uzunlugu "+str(len(marka)))
    # print("Sets Marka")
    # print(marka)

            


    # for eslesen in allProducts:

    #     print("Toplam eslesen "+ str(len(eslesen)))
    #     for i in eslesen:
    #         print(i.site)
    #     print("*"*100)
    

    print('Eslesen verilerin toplam sayısı ' + str(len(allProducts)))

    # for a in allProducts:
    #     for b in a:
    #         print(b.site)
    #     break
    posts=allProducts
    page = request.GET.get('page')
    num_of_item= 20
    paginator= Paginator(posts,num_of_item)
    PostsFinal=paginator.get_page(page)
    
    dynamicVar = {
        'products': PostsFinal,
        'markas':marka,
        'isletimSistemis' : isletimSistemi,
        'islemciTipis' : islemciTipi,
        'islemciNeslis' : islemciNesli,
        'rams': ram,
        'diskTurus': diskTuru,
        'ekranBoyus': ekranBoyu,
        'diskBoyutus': diskBoyutu,
        'modelAdis': modelAdi    
    }
    #tum urunleri al dedik
    #tum urunleri al dedik

    #render bize gelen requeste gore templatelerden dosya arıyor
    #spesifik bir yerden aramasını istedigimizden template altında dosya olusturduk
    # return render(request, "shopping/index.html", dynamicVar) 
    return render(request, "shopping/index.html", dynamicVar)



"""
Django settings for shoppingApp project.

Generated by 'django-admin startproject' using Django 3.2.15.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*%8o&3bvaa9e)jxmr_o)5g25+(t2(0%bq&vr6-u6=)($et@o^j'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
# Olusturulan app leri buraya ekliyoruz, tanıtıyoruz
INSTALLED_APPS = [
    'shopping',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient"
        },
    }
}

ROOT_URLCONF = 'shoppingApp.urls'

# bu kısım bizim app lerin altında olusturudugumuz templates klosorlerini tarıyor
# ekstra DIRS a ben anadizindeki genel templates dosyasına da bak dedim
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR /"templates"
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'shoppingApp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': 'WebScraping',
        'CLIENT': {
                'host': 'mongodb://abvag:abvag@localhost:27017'
            }    
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'tr-tr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
# uygulamar icersindeki static adlı dosyaları tarıyor
STATIC_URL = '/static/'

# genel bir static dosyası tanımlamak icin onun yolunu belirtmelisin
STATICFILES_DIRS = [
    BASE_DIR / "static"
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


from django.contrib import admin
from django.urls import path, include

# programa eklenecek url ler i buraya yazarsın ve her app e kendin urls.py dosyasını eklersin
urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('shopping.urls')), #shopping in url kısmını ana uygulamaya dahil ettik
]

{% load static %}
<!-- bu bize static dosyaları ulastırıyor -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="{% static 'css/bootstrap.min.css' %}">
    <link rel="stylesheet" href="{% static 'css/base.css' %}">
    <link rel="stylesheet" href="{% static 'shopping/css/style.css' %}"> 
    <!-- kabaca bu sekilde static keywordu ve dosya adı ile ilgili static dosyasını çekiyoruz -->

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css">
    <!-- html icin icon saglayan sayfa -->

    {% block cssArea %} {% endblock %}
    <title>{% block title %}{% endblock %}</title>
</head>
<body>

    {% include 'framePart/_navbar.html' %}
    <!-- template altını gezer ve path de belirtilen dosya icerigini ekler -->

    <!-- artık spesifik olusturucaz her uygulama kendisine burayı base alacak
        block content ile tanımlı yerlere kendi ozelliklerini iletecek -->
    {% block main %}

    {% endblock %}



    {% include 'framePart/_footer.html' %}
    <!-- template altını gezer ve path de belirtilen dosya icerigini ekler -->

    <script src="{% static 'js/bootstrap.min.js' %}"></script>
    <script src="{% static 'js/myScripts.js' %}"></script>
</body>
</html>



<!-- footer start -->
<footer class="footer" id="about">
    <div class="jumbotron">
        <div class="container py-4">
            <div class="row align-items-center">
                <div class="col-lg-6 text-lg-start text-muted">
                    Taha Pek - Melih Selami Ürkmez
                </div>

                <div class="col-lg-6 text-lg-end">
                    <a href="#" class="link-secondary text-decoration-none">Anasayfa</a>
                </div>
            </div>
        </div>
    </div>
</footer>
<!-- footer end -->




<!-- navbar -->
<header>

    <nav class="navbar navbar-dark bg-dark navbar-expand-sm" id="main-navbar">
        <div class="container">
            <a class="navbar-brand" href="#">
                <i class="fa fa-shopping-cart" aria-hidden="true"></i>
                UcuzlukPazarı
            </a>

            <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas"
                data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="offcanvas offcanvas-end offcanvas-dark" tabindex="-1" id="offcanvasNavbar"
                aria-labelledby="offcanvasNavbarLabel">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title" id="offcanvasNavbarLabel">
                        <i class="fa fa-shopping-cart" aria-hidden="true"></i>
                        UcuzlukPazarı
                    </h5>
                    <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
                        aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <ul class="navbar-nav justify-content-start flex-grow-1 pe-3">
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="page" href="{% url 'home' %}">Ana Sayfa</a>
                            <!-- url home diyerek home adı verilen url e bizi aktarır -->
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#about">Hakkımızda</a>
                        </li>
                    </ul>

                    <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="page" href="#">Giriş Yap</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">Kaydol</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">Çıkış Yap</a>
                        </li>
                    </ul>

                    <form class="d-flex" id="navbar-form" action="{% url 'filterWithSearchBar' %}" method="POST">
                        {% csrf_token %}
                        <div class="autocomplete">
                        <input class="form-control me-2" id="myInput" name="searchBar" type="search" placeholder="Ara" aria-label="Ara">
                        </div>
                        <button class="btn btn-outline-light ms-2" id="navbar-form-button" type="submit">Ara</button>
                    </form>
                </div>
            </div>
        </div>
    </nav>

</header>
<!-- navbar end -->